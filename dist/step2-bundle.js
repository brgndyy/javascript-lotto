(()=>{"use strict";var n={955:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".content-card {\n  width: 100%;\n  height: auto;\n  min-height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.content-container {\n  width: 414px;\n  height: 727px;\n  border: solid 1px rgba(0, 0, 0, 0.12);\n  margin-top: 64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: scroll;\n}\n\n.content-title-container {\n  margin: 30px 0;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/content.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,qCAAqC;EACrC,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB",sourcesContent:[".content-card {\n  width: 100%;\n  height: auto;\n  min-height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.content-container {\n  width: 414px;\n  height: 727px;\n  border: solid 1px rgba(0, 0, 0, 0.12);\n  margin-top: 64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: scroll;\n}\n\n.content-title-container {\n  margin: 30px 0;\n}\n"],sourceRoot:""}]);const s=a},616:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".footer-container {\n  border-top: 1px solid rgba(78, 91, 166, 0.2);\n  height: 80px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.footer-logo-text {\n  color: var(--main-color);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 800;\n  font-size: 14px;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/footer.css"],names:[],mappings:"AAAA;EACE,4CAA4C;EAC5C,YAAY;EACZ,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,iCAAiC;EACjC,gBAAgB;EAChB,eAAe;AACjB",sourcesContent:[".footer-container {\n  border-top: 1px solid rgba(78, 91, 166, 0.2);\n  height: 80px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.footer-logo-text {\n  color: var(--main-color);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 800;\n  font-size: 14px;\n}\n"],sourceRoot:""}]);const s=a},638:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,"* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  margin: 0;\n  width: 100vw;\n  min-height: 100vh;\n  height: auto;\n  background: white;\n  position: relative;\n  overflow: scroll;\n}\n\ninput {\n  border-radius: 4px;\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n\nbutton {\n  background: var(--main-color);\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 4px;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/globals.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,SAAS;EACT,YAAY;EACZ,iBAAiB;EACjB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;AACvC;;AAEA;EACE,6BAA6B;EAC7B,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB",sourcesContent:["* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  margin: 0;\n  width: 100vw;\n  min-height: 100vh;\n  height: auto;\n  background: white;\n  position: relative;\n  overflow: scroll;\n}\n\ninput {\n  border-radius: 4px;\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n\nbutton {\n  background: var(--main-color);\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  border-radius: 4px;\n}\n"],sourceRoot:""}]);const s=a},315:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".main-header {\n  width: 100vw;\n  max-height: 64px;\n  height: auto;\n  background: var(--main-color);\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.main-header-container {\n  width: 30%;\n  text-align: center;\n}\n\n.main-header-logo {\n  color: #fff;\n  font-weight: 800;\n  font-size: 24px;\n  line-height: 36px;\n  font-family: 'Roboto', sans-serif;\n  white-space: nowrap;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/header.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,6BAA6B;EAC7B,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,eAAe;EACf,iBAAiB;EACjB,iCAAiC;EACjC,mBAAmB;AACrB",sourcesContent:[".main-header {\n  width: 100vw;\n  max-height: 64px;\n  height: auto;\n  background: var(--main-color);\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.main-header-container {\n  width: 30%;\n  text-align: center;\n}\n\n.main-header-logo {\n  color: #fff;\n  font-weight: 800;\n  font-size: 24px;\n  line-height: 36px;\n  font-family: 'Roboto', sans-serif;\n  white-space: nowrap;\n}\n"],sourceRoot:""}]);const s=a},452:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".main-card {\n  height: 100vh;\n  margin: 0 auto;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/main.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,cAAc;AAChB",sourcesContent:[".main-card {\n  height: 100vh;\n  margin: 0 auto;\n}\n"],sourceRoot:""}]);const s=a},301:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".modal-card {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n  display: none;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-open {\n  display: flex;\n}\n\n.modal-container {\n  width: 350px;\n  height: 500px;\n  background: #fff;\n  border-radius: 4px;\n  position: relative;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.winning-statistics-result-banner-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 25px 0;\n}\n\n.result-banner-text {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 20px;\n}\n\n.close-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 10px;\n}\n\n.close-button {\n  font-size: 18px;\n  color: rgba(0, 0, 0, 1);\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/modal.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,iCAAiC;EACjC,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,QAAQ;EACR,MAAM;EACN,aAAa;AACf;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB",sourcesContent:[".modal-card {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n  display: none;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-open {\n  display: flex;\n}\n\n.modal-container {\n  width: 350px;\n  height: 500px;\n  background: #fff;\n  border-radius: 4px;\n  position: relative;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.winning-statistics-result-banner-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 25px 0;\n}\n\n.result-banner-text {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 20px;\n}\n\n.close-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 10px;\n}\n\n.close-button {\n  font-size: 18px;\n  color: rgba(0, 0, 0, 1);\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const s=a},151:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".buy-lotto-container {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 64px;\n}\n\n.buy-lotto-form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.buy-lotto-label-input-wrapper {\n  width: 75%;\n}\n\n.buy-lotto {\n  margin: 10px;\n}\n\n.inputLabel {\n  margin: 10px;\n}\n\n.buy-lotto-input {\n  margin: 10px;\n  padding: 10px;\n  width: 100%;\n}\n\n.buy-lotto-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.buy-lotto-button {\n  padding: 10px;\n  width: 56px;\n  margin-top: 20px;\n  height: 36px;\n  margin-left: 25px;\n}\n\n.result-winning-lotto-container {\n  width: 100%;\n  padding: 20px;\n  display: none;\n}\n\n.visible {\n  display: inline;\n}\n\n.result-container {\n  width: 100%;\n}\n\n.result-text {\n  margin-bottom: 10px;\n}\n\n.lottoEmoji {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 34px;\n  margin-right: 10px;\n}\n\n.boughtLotto {\n  display: flex;\n  align-items: center;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/moneyInput.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,6BAA6B;EAC7B,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,iCAAiC;EACjC,gBAAgB;EAChB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB",sourcesContent:[".buy-lotto-container {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  height: 64px;\n}\n\n.buy-lotto-form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.buy-lotto-label-input-wrapper {\n  width: 75%;\n}\n\n.buy-lotto {\n  margin: 10px;\n}\n\n.inputLabel {\n  margin: 10px;\n}\n\n.buy-lotto-input {\n  margin: 10px;\n  padding: 10px;\n  width: 100%;\n}\n\n.buy-lotto-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.buy-lotto-button {\n  padding: 10px;\n  width: 56px;\n  margin-top: 20px;\n  height: 36px;\n  margin-left: 25px;\n}\n\n.result-winning-lotto-container {\n  width: 100%;\n  padding: 20px;\n  display: none;\n}\n\n.visible {\n  display: inline;\n}\n\n.result-container {\n  width: 100%;\n}\n\n.result-text {\n  margin-bottom: 10px;\n}\n\n.lottoEmoji {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n  font-size: 34px;\n  margin-right: 10px;\n}\n\n.boughtLotto {\n  display: flex;\n  align-items: center;\n}\n"],sourceRoot:""}]);const s=a},218:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".result-table {\n  width: 100%;\n  height: 100%;\n  border-collapse: collapse;\n}\n\n.table-row {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 10px 0;\n}\n\n.table-row:nth-last-child(1) {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.table-heading {\n  font-weight: bold !important;\n}\n\n.table-data-text {\n  font-size: 15px;\n  font-weight: 400;\n  font-family: 'Roboto', sans-serif;\n  text-align: center;\n}\n\n.row {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n\n.statistics-result-banner-container {\n  width: 100%;\n  margin: 40px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.statistics-result-text {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 700;\n  font-size: 15px;\n}\n\n.retry-select-button-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.retry-select-button {\n  width: 100%;\n  height: 36px;\n  padding: 6px 6px 6px 8px;\n  margin-bottom: 20px;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/table.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,yCAAyC;EACzC,eAAe;AACjB;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,OAAO;AACT;;AAEA;EACE,WAAW;EACX,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iCAAiC;EACjC,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,mBAAmB;AACrB",sourcesContent:[".result-table {\n  width: 100%;\n  height: 100%;\n  border-collapse: collapse;\n}\n\n.table-row {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 10px 0;\n}\n\n.table-row:nth-last-child(1) {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.table-heading {\n  font-weight: bold !important;\n}\n\n.table-data-text {\n  font-size: 15px;\n  font-weight: 400;\n  font-family: 'Roboto', sans-serif;\n  text-align: center;\n}\n\n.row {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n\n.statistics-result-banner-container {\n  width: 100%;\n  margin: 40px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.statistics-result-text {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 700;\n  font-size: 15px;\n}\n\n.retry-select-button-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.retry-select-button {\n  width: 100%;\n  height: 36px;\n  padding: 6px 6px 6px 8px;\n  margin-bottom: 20px;\n}\n"],sourceRoot:""}]);const s=a},432:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,":root {\n  --main-color: #4e5ba6;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/variables.css"],names:[],mappings:"AAAA;EACE,qBAAqB;AACvB",sourcesContent:[":root {\n  --main-color: #4e5ba6;\n}\n"],sourceRoot:""}]);const s=a},303:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,".winning-lotto-form-container {\n  width: 100%;\n}\n\n.winning-lotto-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.winning-lotto-form-banner-text {\n  margin: 10px 0;\n}\n\n.winning-lotto-label {\n  margin-bottom: 10px;\n}\n\n.winning-lotto-numbers-container {\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n}\n\n.winning-lotto-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.winning-lotto-input-container {\n  margin-top: 10px;\n}\n\n.winning-lotto-input {\n  width: 34px;\n  height: 36px;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid rgba(180, 180, 180, 1);\n}\n\n.bonus-number-container {\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n}\n\n.bonus-number {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.bonus-number-input-wrapper {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.result-button-container {\n  width: 100%;\n  margin-top: 30px;\n}\n\n.result-button {\n  width: 100%;\n  padding: 6px 6px 6px 8px;\n  height: 36px;\n}\n","",{version:3,sources:["webpack://./src/step2/styles/winningLottoInput.css"],names:[],mappings:"AAAA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,wCAAwC;AAC1C;;AAEA;EACE,UAAU;EACV,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,wBAAwB;EACxB,YAAY;AACd",sourcesContent:[".winning-lotto-form-container {\n  width: 100%;\n}\n\n.winning-lotto-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.winning-lotto-form-banner-text {\n  margin: 10px 0;\n}\n\n.winning-lotto-label {\n  margin-bottom: 10px;\n}\n\n.winning-lotto-numbers-container {\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n}\n\n.winning-lotto-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.winning-lotto-input-container {\n  margin-top: 10px;\n}\n\n.winning-lotto-input {\n  width: 34px;\n  height: 36px;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid rgba(180, 180, 180, 1);\n}\n\n.bonus-number-container {\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n}\n\n.bonus-number {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.bonus-number-input-wrapper {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.result-button-container {\n  width: 100%;\n  margin-top: 30px;\n}\n\n.result-button {\n  width: 100%;\n  padding: 6px 6px 6px 8px;\n  height: 36px;\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],l=o.base?A[0]+o.base:A[0],c=i[l]||0,u="".concat(l," ").concat(c);i[l]=c+1;var f=e(u),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var d=r(p,o);o.byIndex=s,t.splice(s,0,{identifier:u,updater:d,references:1})}a.push(u)}return a}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var A=o(n,r),l=0;l<i.length;l++){var c=e(i[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=A}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=function(n){n.value=""},t=function(){window.location.reload()};const o=Object.freeze({MIN_PRICE:1e3,MAX_PRICE:1e5,MIN_NUM:1,MAX_NUM:45,VALID_LENGTH:6});function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function i(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function a(n){var t="function"==typeof Map?new Map:void 0;return a=function(n){if(null===n||(e=n,-1===Function.toString.call(e).indexOf("[native code]")))return n;var e;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(n))return t.get(n);t.set(n,o)}function o(){return s(n,arguments,c(this).constructor)}return o.prototype=Object.create(n.prototype,{constructor:{value:o,enumerable:!1,writable:!0,configurable:!0}}),l(o,n)},a(n)}function s(n,t,e){return s=A()?Reflect.construct.bind():function(n,t,e){var o=[null];o.push.apply(o,t);var r=new(Function.bind.apply(n,o));return e&&l(r,e.prototype),r},s.apply(null,arguments)}function A(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function l(n,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,t){return n.__proto__=t,n},l(n,t)}function c(n){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},c(n)}function u(n,t,e){return(t=f(t))in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function f(n){var t=function(n,t){if("object"!==r(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===r(t)?t:String(t)}var p=function(n){!function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(t&&t.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),t&&l(n,t)}(s,n);var t,e,o,a=(e=s,o=A(),function(){var n,t=c(e);if(o){var a=c(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return function(n,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return i(n)}(this,n)});function s(n){var t;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s);var e="".concat(s.PREFIX," ").concat(n,"\n");return u(i(t=a.call(this,e)),"name",void 0),t.name=t.constructor.name,t}return t=s,Object.defineProperty(t,"prototype",{writable:!1}),t}(a(Error));u(p,"PREFIX","❌");const d=p,m=Object.freeze({INVALID_MIN_MONEY:"최소 구입 금액은 1000원 이상이어야해요!",OVER_MAX_PRICE:"최대 구입 금액은 100,000원이에요!",NO_ANY_INPUT:"",HAVE_DUPLICATION_OF_LOTTO_NUMBER:"로또 번호에 중복된 숫자가 존재합니다.",OUT_OF_RANGE:"로또 번호는 1이상 45이하의 숫자여야해요!",INVALID_LENGTH:"로또 번호는 총 6개여야해요!",INVALID_RETRY_INPUT:"y나 n을 입력해주세요!",INVALID_TYPE:"구입 금액은 숫자여야해요!"});function h(n){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h(n)}function b(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,(void 0,r=function(n,t){if("object"!==h(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==h(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(o.key),"symbol"===h(r)?r:String(r)),o)}var r}function y(n,t){E(n,t),t.add(n)}function E(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function g(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}function C(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}var v=new WeakMap,w=new WeakSet,B=new WeakSet,x=new WeakSet,T=new WeakSet,S=function(){function n(){var t,e;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),y(this,T),y(this,x),y(this,B),y(this,w),e={writable:!0,value:void 0},E(this,t=v),t.set(this,e)}var t,e;return t=n,e=[{key:"receiveInjectionValue",value:function(n){var t,e;C(this,w,k).call(this,n),e=n,function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(t=this,g(t,v,"set"),e)}},{key:"getMoney",value:function(){return function(n,t){return t.get?t.get.call(n):t.value}(this,g(this,v,"get"))}}],e&&b(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function k(n){C(this,T,j).call(this,n),C(this,B,N).call(this,n),C(this,x,I).call(this,n)}function N(n){if(n<o.MIN_PRICE)throw new d(m.INVALID_MIN_MONEY)}function I(n){if(n>o.MAX_PRICE)throw new d(m.OVER_MAX_PRICE)}function j(n){if(!Number.isInteger(n))throw new d(m.INVALID_TYPE)}const O=S,R=function(n,t){return Math.floor(Math.random()*(t-n+1))+n};function _(n){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_(n)}const L=function n(t){return Object.keys(t).forEach((function(e){"object"!==_(t[e])||Object.isFrozen(t[e])||n(t[e])})),Object.freeze(t)},M=L({FIRST:{COUNT:6,RANK:1},SECOND:{COUNT:5,RANK:2},THIRD:{COUNT:5,RANK:3},FOURTH:{COUNT:4,RANK:4},FIFTH:{COUNT:3,RANK:5}});function W(n){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},W(n)}function Z(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,(void 0,r=function(n,t){if("object"!==W(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==W(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(o.key),"symbol"===W(r)?r:String(r)),o)}var r}function P(n,t){Y(n,t),t.add(n)}function U(n,t,e){Y(n,t),t.set(n,e)}function Y(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function z(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,F(n,t,"set"),e),e}function D(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,F(n,t,"get"))}function F(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}function X(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}var H=new WeakMap,V=new WeakMap,G=new WeakMap,K=new WeakSet,q=new WeakSet,Q=new WeakSet,J=new WeakSet,$=new WeakSet,nn=new WeakSet,tn=new WeakSet,en=new WeakSet,on=new WeakSet;function rn(n,t){var e=this;t.forEach((function(t){n.includes(t)&&z(e,V,D(e,V)+1)}))}function an(n,t){D(this,V)===M.SECOND.COUNT&&n.includes(t)&&z(this,G,!0)}function sn(){X(this,J,An).call(this),X(this,$,ln).call(this),X(this,nn,cn).call(this),X(this,tn,un).call(this),X(this,en,fn).call(this)}function An(){D(this,V)!==M.FIRST.COUNT||D(this,G)||(D(this,H).find((function(n){return n.rank===M.FIRST.RANK})).count+=1)}function ln(){D(this,V)!==M.SECOND.COUNT||this.isBonusMatch||(D(this,H).find((function(n){return n.rank===M.SECOND.RANK})).count+=1)}function cn(){D(this,V)===M.THIRD.COUNT&&this.isBonusMatch&&(D(this,H).find((function(n){return n.rank===M.THIRD.RANK})).count+=1)}function un(){D(this,V)!==M.FIFTH.COUNT||this.isBonusMatch||(D(this,H).find((function(n){return n.rank===M.FOURTH.RANK})).count+=1)}function fn(){D(this,V)!==M.FIFTH.COUNT||this.isBonusMatch||(D(this,H).find((function(n){return n.rank===M.FIFTH.RANK})).count+=1)}function pn(){z(this,V,0),z(this,G,!1)}const dn=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),P(this,on),P(this,en),P(this,tn),P(this,nn),P(this,$),P(this,J),P(this,Q),P(this,q),P(this,K),U(this,H,{writable:!0,value:[{rank:1,count:0},{rank:2,count:0},{rank:3,count:0},{rank:4,count:0},{rank:5,count:0}]}),U(this,V,{writable:!0,value:0}),U(this,G,{writable:!0,value:!1})}var t,e;return t=n,(e=[{key:"calculateRewardRank",value:function(n,t){X(this,on,pn).call(this);var e=t.winningLottoNumbers,o=t.bonusNumber;X(this,K,rn).call(this,n,e),X(this,q,an).call(this,n,o),X(this,Q,sn).call(this)}},{key:"getTotalRewardResult",value:function(){return D(this,H)}}])&&Z(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function mn(n){return mn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},mn(n)}function hn(n){return function(n){if(Array.isArray(n))return bn(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,t){if(n){if("string"==typeof n)return bn(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?bn(n,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bn(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=new Array(t);e<t;e++)o[e]=n[e];return o}function yn(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,(void 0,r=function(n,t){if("object"!==mn(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==mn(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(o.key),"symbol"===mn(r)?r:String(r)),o)}var r}function En(n,t){gn(n,t),t.add(n)}function gn(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Cn(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,wn(n,t,"get"))}function vn(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function wn(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var Bn=new WeakMap,xn=new WeakSet,Tn=new WeakSet,Sn=new WeakSet,kn=new WeakSet,Nn=function(){function n(t){var e,o;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),En(this,kn),En(this,Sn),En(this,Tn),En(this,xn),o={writable:!0,value:void 0},gn(this,e=Bn),e.set(this,o),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,wn(n,t,"set"),e)}(this,Bn,t.sort((function(n,t){return n-t}))),vn(this,xn,In).call(this)}var t,e;return t=n,(e=[{key:"getLottoNumbers",value:function(){return hn(Cn(this,Bn))}}])&&yn(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function In(){vn(this,Tn,jn).call(this),vn(this,Sn,On).call(this),vn(this,kn,Rn).call(this)}function jn(){if(!Cn(this,Bn).every((function(n){return n>=o.MIN_NUM&&n<=o.MAX_NUM})))throw new d(m.OUT_OF_RANGE)}function On(){if(new Set(hn(Cn(this,Bn))).size!==o.VALID_LENGTH)throw new d(m.HAVE_DUPLICATION_OF_LOTTO_NUMBER)}function Rn(){if(Cn(this,Bn).length!==o.VALID_LENGTH)throw new d(m.INVALID_LENGTH)}const _n=L({1:{prize:2e9,message:"6개 일치 (2,000,000,000원) - "},2:{prize:3e7,message:"5개 일치, 보너스 볼 일치 (30,000,000원) - "},3:{prize:15e5,message:"5개 일치 (1,500,000원) - "},4:{prize:5e4,message:"4개 일치 (50,000원) - "},5:{prize:5e3,message:"3개 일치 (5,000원) - "}});function Ln(n){return Ln="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ln(n)}function Mn(n){return function(n){if(Array.isArray(n))return Wn(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,t){if(n){if("string"==typeof n)return Wn(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Wn(n,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wn(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=new Array(t);e<t;e++)o[e]=n[e];return o}function Zn(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,(void 0,r=function(n,t){if("object"!==Ln(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==Ln(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(o.key),"symbol"===Ln(r)?r:String(r)),o)}var r}function Pn(n,t){Yn(n,t),t.add(n)}function Un(n,t,e){Yn(n,t),t.set(n,e)}function Yn(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function zn(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,Xn(n,t,"get"))}function Dn(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function Fn(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,Xn(n,t,"set"),e),e}function Xn(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var Hn=new WeakMap,Vn=new WeakMap,Gn=new WeakMap,Kn=new WeakSet,qn=new WeakSet,Qn=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Pn(this,qn),Pn(this,Kn),Un(this,Hn,{writable:!0,value:0}),Un(this,Vn,{writable:!0,value:void 0}),Un(this,Gn,{writable:!0,value:void 0}),Fn(this,Gn,new dn)}var t,e;return t=n,e=[{key:"makeLottoByMoney",value:function(n){var t=this,e=Math.floor(n/o.MIN_PRICE);Fn(this,Vn,Array.from({length:e},(function(){var n=Dn(t,Kn,Jn).call(t);return new Nn(n).getLottoNumbers()})))}},{key:"getLottos",value:function(){return Mn(zn(this,Vn))}},{key:"getRewardResult",value:function(n){var t=this;zn(this,Vn).forEach((function(e){zn(t,Gn).calculateRewardRank(e,n)}));var e=zn(this,Gn).getTotalRewardResult().sort((function(n,t){return t.rank-n.rank}));return Dn(this,qn,$n).call(this,e),e}},{key:"getRateOfIncome",value:function(n){return Number((zn(this,Hn)/n*100).toFixed(1)).toLocaleString()}}],e&&Zn(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function Jn(){for(var n=new Set;n.size!==o.VALID_LENGTH;){var t=R(o.MIN_NUM,o.MAX_NUM);n.add(t)}return Mn(n)}function $n(n){var t=this;n.forEach((function(n){n.count&&Fn(t,Hn,zn(t,Hn)+_n[n.rank].prize)}))}function nt(n){return nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},nt(n)}function tt(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,(void 0,r=function(n,t){if("object"!==nt(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,"string");if("object"!==nt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(o.key),"symbol"===nt(r)?r:String(r)),o)}var r}function et(n,t){rt(n,t),t.add(n)}function ot(n,t,e){rt(n,t),t.set(n,e)}function rt(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}function it(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,At(n,t,"get"))}function at(n,t,e){if(!t.has(n))throw new TypeError("attempted to get private field on non-instance");return e}function st(n,t,e){return function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}}(n,At(n,t,"set"),e),e}function At(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var lt=new WeakMap,ct=new WeakMap,ut=new WeakSet,ft=new WeakSet,pt=new WeakSet;function dt(n){at(this,ft,mt).call(this,n),at(this,pt,ht).call(this,n)}function mt(n){if(n<o.MIN_NUM||n>o.MAX_NUM)throw new d(m.OUT_OF_RANGE)}function ht(n){if(it(this,lt).includes(n))throw new d(m.HAVE_DUPLICATION_OF_LOTTO_NUMBER)}const bt=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),et(this,pt),et(this,ft),et(this,ut),ot(this,lt,{writable:!0,value:void 0}),ot(this,ct,{writable:!0,value:void 0})}var t,e;return t=n,(e=[{key:"setWinLottoNumbers",value:function(n){st(this,lt,new Nn(n).getLottoNumbers())}},{key:"setBonusNumber",value:function(n){at(this,ut,dt).call(this,n),st(this,ct,n)}},{key:"getWinLottoNumbers",value:function(){return{winningLottoNumbers:it(this,lt),bonusNumber:it(this,ct)}}}])&&tt(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();var yt=new O,Et=new Qn,gt=new bt;const Ct=Object.freeze({INPUT_MONEY:"구입금액을 입력해 주세요.",INPUT_WINNING_LOTTO:"당첨 번호를 입력해주세요.",INPUT_BONUS_NUMBER:"보너스 번호를 입력해주세요.",SELECT_RE_RUN:"다시 시작하시겠습니까? (y/n)",BUY_LOTTO:function(n){return"총 ".concat(n,"개를 구매했습니다.")},RESULT_HEADER:"당첨 통계\n--------------------",RATE_OF_RETURN_MESSAGE:function(n){return"당신의 총 수익률은 ".concat(n.toLocaleString(),"% 입니다.")}}),vt=Object.freeze({LOTTO_NUMBER_SEPERATOR:","}),wt=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;try{n()}catch(n){t&&t(n)}finally{e&&e()}};var Bt=function(t){t.preventDefault(),wt((function(){var n,t,e,o=(n=moneyInput.value,yt.receiveInjectionValue(Number(n)),e=yt.getMoney(),Et.makeLottoByMoney(e),Et.getLottos());t=o.length,document.getElementById("resultText").textContent="".concat(Ct.BUY_LOTTO(t)),function(n){n.forEach((function(n){boughtLottosContainer.innerHTML+='<div class="boughtLotto"><p class ="lottoEmoji">🎟️</p> '.concat(n.join("".concat(vt.LOTTO_NUMBER_SEPERATOR," ")),"</div>")}))}(o),document.getElementById("resultAndWinningLottoContainer").classList.add("visible")}),(function(n){alert(n.message)}),(function(){n(moneyInput)}))},xt=[],Tt=function(){document.getElementById("modalCard").classList.add("modal-open")},St=function(){document.getElementById("modalCard").classList.remove("modal-open")},kt=e(379),Nt=e.n(kt),It=e(795),jt=e.n(It),Ot=e(569),Rt=e.n(Ot),_t=e(565),Lt=e.n(_t),Mt=e(216),Wt=e.n(Mt),Zt=e(589),Pt=e.n(Zt),Ut=e(638),Yt={};Yt.styleTagTransform=Pt(),Yt.setAttributes=Lt(),Yt.insert=Rt().bind(null,"head"),Yt.domAPI=jt(),Yt.insertStyleElement=Wt(),Nt()(Ut.Z,Yt),Ut.Z&&Ut.Z.locals&&Ut.Z.locals;var zt=e(452),Dt={};Dt.styleTagTransform=Pt(),Dt.setAttributes=Lt(),Dt.insert=Rt().bind(null,"head"),Dt.domAPI=jt(),Dt.insertStyleElement=Wt(),Nt()(zt.Z,Dt),zt.Z&&zt.Z.locals&&zt.Z.locals;var Ft=e(315),Xt={};Xt.styleTagTransform=Pt(),Xt.setAttributes=Lt(),Xt.insert=Rt().bind(null,"head"),Xt.domAPI=jt(),Xt.insertStyleElement=Wt(),Nt()(Ft.Z,Xt),Ft.Z&&Ft.Z.locals&&Ft.Z.locals;var Ht=e(955),Vt={};Vt.styleTagTransform=Pt(),Vt.setAttributes=Lt(),Vt.insert=Rt().bind(null,"head"),Vt.domAPI=jt(),Vt.insertStyleElement=Wt(),Nt()(Ht.Z,Vt),Ht.Z&&Ht.Z.locals&&Ht.Z.locals;var Gt=e(151),Kt={};Kt.styleTagTransform=Pt(),Kt.setAttributes=Lt(),Kt.insert=Rt().bind(null,"head"),Kt.domAPI=jt(),Kt.insertStyleElement=Wt(),Nt()(Gt.Z,Kt),Gt.Z&&Gt.Z.locals&&Gt.Z.locals;var qt=e(303),Qt={};Qt.styleTagTransform=Pt(),Qt.setAttributes=Lt(),Qt.insert=Rt().bind(null,"head"),Qt.domAPI=jt(),Qt.insertStyleElement=Wt(),Nt()(qt.Z,Qt),qt.Z&&qt.Z.locals&&qt.Z.locals;var Jt=e(301),$t={};$t.styleTagTransform=Pt(),$t.setAttributes=Lt(),$t.insert=Rt().bind(null,"head"),$t.domAPI=jt(),$t.insertStyleElement=Wt(),Nt()(Jt.Z,$t),Jt.Z&&Jt.Z.locals&&Jt.Z.locals;var ne=e(616),te={};te.styleTagTransform=Pt(),te.setAttributes=Lt(),te.insert=Rt().bind(null,"head"),te.domAPI=jt(),te.insertStyleElement=Wt(),Nt()(ne.Z,te),ne.Z&&ne.Z.locals&&ne.Z.locals;var ee=e(432),oe={};oe.styleTagTransform=Pt(),oe.setAttributes=Lt(),oe.insert=Rt().bind(null,"head"),oe.domAPI=jt(),oe.insertStyleElement=Wt(),Nt()(ee.Z,oe),ee.Z&&ee.Z.locals&&ee.Z.locals;var re=e(218),ie={};ie.styleTagTransform=Pt(),ie.setAttributes=Lt(),ie.insert=Rt().bind(null,"head"),ie.domAPI=jt(),ie.insertStyleElement=Wt(),Nt()(re.Z,ie),re.Z&&re.Z.locals&&re.Z.locals,document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("moneyInputForm"),r=document.querySelectorAll(".winning-lotto-input"),i=document.getElementById("winningLottoForm"),a=document.getElementById("modalCloseButton"),s=document.querySelectorAll(".match-count-text"),A=document.getElementById("retrySelectButton");e.addEventListener("submit",Bt),r.forEach((function(t,e){!function(t){var e=t.input,r=t.index,i=t.winningLottoInputs;e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),function(t){var e=t.input,r=t.index,i=t.winningLottoInputs,a=Number(e.value);r<o.VALID_LENGTH&&(function(n){var t=n.index,e=n.winningLottoInputs;t+1<e.length&&e[t+1].focus()}({index:r,winningLottoInputs:i}),xt.push(a)),xt.length===o.VALID_LENGTH&&wt((function(){gt.setWinLottoNumbers(xt)}),(function(t){alert(t.message),i.forEach((function(t){n(t)}))})),r===o.VALID_LENGTH&&(function(t,e){wt((function(){gt.setBonusNumber(t)}),(function(t){alert(t.message),n(e)}))}(a,e),e.blur())}({input:e,index:r,winningLottoInputs:i}))}))}({input:t,index:e,winningLottoInputs:r})})),i.addEventListener("submit",(function(n){return function(n){var t,e=n.e,o=n.winningCounts;if(e.preventDefault(),""===document.getElementById("statisticsResultText").textContent){Tt();var r=gt.getWinLottoNumbers(),i=Et.getRewardResult(r);o.forEach((function(n,t){n.textContent=i[t].count+"개"}));var a=yt.getMoney();t=Et.getRateOfIncome(a),document.getElementById("statisticsResultText").textContent=Ct.RATE_OF_RETURN_MESSAGE(t)}else Tt()}({e:n,winningCounts:s})})),a.addEventListener("click",St),A.addEventListener("click",t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQXFCMEksRUFDdkIsR0FFSixDQXlCSUssQ0FBZUosRUFBZUQsR0FDOUJBLEVBQU1NLE9BRVYsQ0FNTUMsQ0FBZ0MsQ0FBRVAsTUFBQUEsRUFBT3BNLE1BQUFBLEVBQU84TCxtQkFBQUEsSUFFcEQsR0FDRixDWTlCSWMsQ0FBZ0MsQ0FBRVIsTUFBQUEsRUFBT3BNLE1BQUFBLEVBQU84TCxtQkFBQUEsR0FDbEQsSUFDQUUsRUFBaUJKLGlCQUFpQixVQUFVLFNBQUM3SyxHQUFDLE9YRlQsU0FBSCxHQUE2QixJQVg3QjhJLEVBV005SSxFQUFDLEVBQURBLEVBQUdtTCxFQUFhLEVBQWJBLGNBRzNDLEdBRkFuTCxFQUFFcUosaUJBSjhCLEtBREgzSixTQUFTc0ssZUFBZSx3QkFBd0JDLFlBTzdFLENBS0FVLEtBRUEsSUFBTXRFLEVBQXdCK0IsR0FBYTBELHFCQUNyQ3BPLEVBQVN5SyxHQUFhNEQsZ0JBQWdCMUYsR0FFNUM4RSxFQUFjaEcsU0FBUSxTQUFDNkcsRUFBYy9NLEdBQ25DK00sRUFBYS9CLFlBQWN2TSxFQUFPdUIsR0FBT2pCLE1BQVEsR0FDbkQsSUFFQSxJQUFNaU8sRUFBYzNILEdBQU11RixXQTVCUWYsRUE2QmJYLEdBQWErRCxnQkFBZ0JELEdBNUJyQnZNLFNBQVNzSyxlQUFlLHdCQUVoQ0MsWUFBY0MsR0FBQUEsdUJBQXdDcEIsRUFjM0UsTUFGRTZCLElBZ0JKLENXbEJxRHdCLENBQXdCLENBQUVuTSxFQUFBQSxFQUFHbUwsY0FBQUEsR0FBZ0IsSUFDaEdELEVBQWlCTCxpQkFBaUIsUUFBU0QsSUFDM0NRLEVBQWtCUCxpQkFBaUIsUUFBUy9ILEVBQzlDLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy9jb250ZW50LmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy9mb290ZXIuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL2dsb2JhbHMuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL2hlYWRlci5jc3MiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9zdHlsZXMvbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9zdHlsZXMvbW9kYWwuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL21vbmV5SW5wdXQuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL3RhYmxlLmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy92YXJpYWJsZXMuY3NzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL3dpbm5pbmdMb3R0b0lucHV0LmNzcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvaGFuZGxlcnMvdWlVdGlscy5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL0NvbnN0YW50cy9sb3R0b1NldHRpbmcuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9FcnJvci9BcHBFcnJvci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL0NvbnN0YW50cy9NZXNzYWdlcy9lcnJvck1lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Eb21haW4vTW9uZXkuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9VdGlscy9nZW5lcmF0ZVJhbmRvbU51bWJlckZyb21SYW5nZS5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL1V0aWxzL2RlZXBGcmVlemUuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Db25zdGFudHMvbWF0Y2hDb3VudENvbmRpdGlvbi5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL0RvbWFpbi9SZXdhcmRHZW5lcmF0b3IuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Eb21haW4vTG90dG8uanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Db25zdGFudHMvbG90dG9SZXdhcmQuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Eb21haW4vTG90dG9NYWNoaW5lLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvRG9tYWluL1dpbm5pbmdMb3R0by5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL2luc3RhbmNlcy5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL0NvbnN0YW50cy9NZXNzYWdlcy9wcm9ncmVzc01lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9Db25zdGFudHMvZGVsaW1pdGVyLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvdXRpbHMvc2FmZUV2ZW50SGFuZGxlcldpdGhBbGVydEVycm9yLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvaGFuZGxlcnMvaW5wdXRNb25leUhhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9oYW5kbGVycy9ib3VnaHRMb3R0b0hhbmRsZXJzLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvaGFuZGxlcnMvaW5wdXRXaW5uaW5nTG90dG9OdW1iZXJzSGFuZGxlci5qcyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL2hhbmRsZXJzL3N0YXRpc3RpY3NSZXN1bHRIYW5kbGVyLmpzIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL2dsb2JhbHMuY3NzP2IyNzYiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9zdHlsZXMvbWFpbi5jc3M/MjdkMyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy9oZWFkZXIuY3NzPzhiYjQiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9zdHlsZXMvY29udGVudC5jc3M/NTAyYSIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy9tb25leUlucHV0LmNzcz9kMzQ0Iiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL3dpbm5pbmdMb3R0b0lucHV0LmNzcz9hZDBlIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL21vZGFsLmNzcz9hMTgyIiwid2VicGFjazovL2phdmFzY3JpcHQtbG90dG8vLi9zcmMvc3RlcDIvc3R5bGVzL2Zvb3Rlci5jc3M/ZjBiYyIsIndlYnBhY2s6Ly9qYXZhc2NyaXB0LWxvdHRvLy4vc3JjL3N0ZXAyL3N0eWxlcy92YXJpYWJsZXMuY3NzP2EzYmYiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi9zdHlsZXMvdGFibGUuY3NzPzU1NmQiLCJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1sb3R0by8uL3NyYy9zdGVwMi1pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5jb250ZW50LWNhcmQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBtaW4taGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmNvbnRlbnQtY29udGFpbmVyIHtcXG4gIHdpZHRoOiA0MTRweDtcXG4gIGhlaWdodDogNzI3cHg7XFxuICBib3JkZXI6IHNvbGlkIDFweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbiAgbWFyZ2luLXRvcDogNjRweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxufVxcblxcbi5jb250ZW50LXRpdGxlLWNvbnRhaW5lciB7XFxuICBtYXJnaW46IDMwcHggMDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0ZXAyL3N0eWxlcy9jb250ZW50LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNvbnRlbnQtY2FyZCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uY29udGVudC1jb250YWluZXIge1xcbiAgd2lkdGg6IDQxNHB4O1xcbiAgaGVpZ2h0OiA3MjdweDtcXG4gIGJvcmRlcjogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XFxuICBtYXJnaW4tdG9wOiA2NHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG59XFxuXFxuLmNvbnRlbnQtdGl0bGUtY29udGFpbmVyIHtcXG4gIG1hcmdpbjogMzBweCAwO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZm9vdGVyLWNvbnRhaW5lciB7XFxuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSg3OCwgOTEsIDE2NiwgMC4yKTtcXG4gIGhlaWdodDogODBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmZvb3Rlci1sb2dvLXRleHQge1xcbiAgY29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0ZXAyL3N0eWxlcy9mb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsNENBQTRDO0VBQzVDLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsaUNBQWlDO0VBQ2pDLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mb290ZXItY29udGFpbmVyIHtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDc4LCA5MSwgMTY2LCAwLjIpO1xcbiAgaGVpZ2h0OiA4MHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uZm9vdGVyLWxvZ28tdGV4dCB7XFxuICBjb2xvcjogdmFyKC0tbWFpbi1jb2xvcik7XFxuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICBmb250LXdlaWdodDogODAwO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxufVxcblxcbmlucHV0IHtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGJvcmRlcjogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XFxufVxcblxcbmJ1dHRvbiB7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1tYWluLWNvbG9yKTtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3RlcDIvc3R5bGVzL2dsb2JhbHMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLFNBQVM7RUFDVCxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuYm9keSB7XFxuICBtYXJnaW46IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIGhlaWdodDogYXV0bztcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG59XFxuXFxuaW5wdXQge1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgYm9yZGVyOiBzb2xpZCAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLW1haW4tY29sb3IpO1xcbiAgY29sb3I6ICNmZmY7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tYWluLWhlYWRlciB7XFxuICB3aWR0aDogMTAwdnc7XFxuICBtYXgtaGVpZ2h0OiA2NHB4O1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tbWFpbi1jb2xvcik7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMDtcXG59XFxuXFxuLm1haW4taGVhZGVyLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMzAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ubWFpbi1oZWFkZXItbG9nbyB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICBsaW5lLWhlaWdodDogMzZweDtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdGVwMi9zdHlsZXMvaGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLDZCQUE2QjtFQUM3QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxVQUFVO0VBQ1Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGlDQUFpQztFQUNqQyxtQkFBbUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm1haW4taGVhZGVyIHtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIG1heC1oZWlnaHQ6IDY0cHg7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1tYWluLWNvbG9yKTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbn1cXG5cXG4ubWFpbi1oZWFkZXItY29udGFpbmVyIHtcXG4gIHdpZHRoOiAzMCU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5tYWluLWhlYWRlci1sb2dvIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW4tY2FyZCB7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgbWFyZ2luOiAwIGF1dG87XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdGVwMi9zdHlsZXMvbWFpbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubWFpbi1jYXJkIHtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBtYXJnaW46IDAgYXV0bztcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1vZGFsLWNhcmQge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcXG4gIHotaW5kZXg6IDEwMDtcXG4gIGRpc3BsYXk6IG5vbmU7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5tb2RhbC1vcGVuIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5tb2RhbC1jb250YWluZXIge1xcbiAgd2lkdGg6IDM1MHB4O1xcbiAgaGVpZ2h0OiA1MDBweDtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nOiAxNXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi53aW5uaW5nLXN0YXRpc3RpY3MtcmVzdWx0LWJhbm5lci1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIG1hcmdpbjogMjVweCAwO1xcbn1cXG5cXG4ucmVzdWx0LWJhbm5lci10ZXh0IHtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbi5jbG9zZS1idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMDtcXG4gIHRvcDogMDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbi5jbG9zZS1idXR0b24ge1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMSk7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdGVwMi9zdHlsZXMvbW9kYWwuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsTUFBTTtFQUNOLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsZUFBZTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubW9kYWwtY2FyZCB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBib3R0b206IDA7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgei1pbmRleDogMTAwO1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGFsLW9wZW4ge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLm1vZGFsLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMzUwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmc6IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLndpbm5pbmctc3RhdGlzdGljcy1yZXN1bHQtYmFubmVyLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgbWFyZ2luOiAyNXB4IDA7XFxufVxcblxcbi5yZXN1bHQtYmFubmVyLXRleHQge1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLmNsb3NlLWJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAwO1xcbiAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuLmNsb3NlLWJ1dHRvbiB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1eS1sb3R0by1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDY0cHg7XFxufVxcblxcbi5idXktbG90dG8tZm9ybSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uYnV5LWxvdHRvLWxhYmVsLWlucHV0LXdyYXBwZXIge1xcbiAgd2lkdGg6IDc1JTtcXG59XFxuXFxuLmJ1eS1sb3R0byB7XFxuICBtYXJnaW46IDEwcHg7XFxufVxcblxcbi5pbnB1dExhYmVsIHtcXG4gIG1hcmdpbjogMTBweDtcXG59XFxuXFxuLmJ1eS1sb3R0by1pbnB1dCB7XFxuICBtYXJnaW46IDEwcHg7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5idXktbG90dG8tYnV0dG9uLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uYnV5LWxvdHRvLWJ1dHRvbiB7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgd2lkdGg6IDU2cHg7XFxuICBtYXJnaW4tdG9wOiAyMHB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgbWFyZ2luLWxlZnQ6IDI1cHg7XFxufVxcblxcbi5yZXN1bHQtd2lubmluZy1sb3R0by1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnZpc2libGUge1xcbiAgZGlzcGxheTogaW5saW5lO1xcbn1cXG5cXG4ucmVzdWx0LWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLnJlc3VsdC10ZXh0IHtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5sb3R0b0Vtb2ppIHtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDM0cHg7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5ib3VnaHRMb3R0byB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0ZXAyL3N0eWxlcy9tb25leUlucHV0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYiw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5idXktbG90dG8tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiA2NHB4O1xcbn1cXG5cXG4uYnV5LWxvdHRvLWZvcm0ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmJ1eS1sb3R0by1sYWJlbC1pbnB1dC13cmFwcGVyIHtcXG4gIHdpZHRoOiA3NSU7XFxufVxcblxcbi5idXktbG90dG8ge1xcbiAgbWFyZ2luOiAxMHB4O1xcbn1cXG5cXG4uaW5wdXRMYWJlbCB7XFxuICBtYXJnaW46IDEwcHg7XFxufVxcblxcbi5idXktbG90dG8taW5wdXQge1xcbiAgbWFyZ2luOiAxMHB4O1xcbiAgcGFkZGluZzogMTBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uYnV5LWxvdHRvLWJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmJ1eS1sb3R0by1idXR0b24ge1xcbiAgcGFkZGluZzogMTBweDtcXG4gIHdpZHRoOiA1NnB4O1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIGhlaWdodDogMzZweDtcXG4gIG1hcmdpbi1sZWZ0OiAyNXB4O1xcbn1cXG5cXG4ucmVzdWx0LXdpbm5pbmctbG90dG8tY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMjBweDtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi52aXNpYmxlIHtcXG4gIGRpc3BsYXk6IGlubGluZTtcXG59XFxuXFxuLnJlc3VsdC1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5yZXN1bHQtdGV4dCB7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4ubG90dG9FbW9qaSB7XFxuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAzNHB4O1xcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uYm91Z2h0TG90dG8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5yZXN1bHQtdGFibGUge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbn1cXG5cXG4udGFibGUtcm93IHtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbiAgcGFkZGluZzogMTBweCAwO1xcbn1cXG5cXG4udGFibGUtcm93Om50aC1sYXN0LWNoaWxkKDEpIHtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbn1cXG5cXG4udGFibGUtaGVhZGluZyB7XFxuICBmb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xcbn1cXG5cXG4udGFibGUtZGF0YS10ZXh0IHtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5yb3cge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZsZXg6IDE7XFxufVxcblxcbi5zdGF0aXN0aWNzLXJlc3VsdC1iYW5uZXItY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWFyZ2luOiA0MHB4IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uc3RhdGlzdGljcy1yZXN1bHQtdGV4dCB7XFxuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbn1cXG5cXG4ucmV0cnktc2VsZWN0LWJ1dHRvbi1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucmV0cnktc2VsZWN0LWJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMzZweDtcXG4gIHBhZGRpbmc6IDZweCA2cHggNnB4IDhweDtcXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdGVwMi9zdHlsZXMvdGFibGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5Q0FBeUM7RUFDekMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDRDQUE0QztBQUM5Qzs7QUFFQTtFQUNFLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsaUNBQWlDO0VBQ2pDLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLE9BQU87QUFDVDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHdCQUF3QjtFQUN4QixtQkFBbUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnJlc3VsdC10YWJsZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxufVxcblxcbi50YWJsZS1yb3cge1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XFxuICBwYWRkaW5nOiAxMHB4IDA7XFxufVxcblxcbi50YWJsZS1yb3c6bnRoLWxhc3QtY2hpbGQoMSkge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XFxufVxcblxcbi50YWJsZS1oZWFkaW5nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XFxufVxcblxcbi50YWJsZS1kYXRhLXRleHQge1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnJvdyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZmxleDogMTtcXG59XFxuXFxuLnN0YXRpc3RpY3MtcmVzdWx0LWJhbm5lci1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDQwcHggMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5zdGF0aXN0aWNzLXJlc3VsdC10ZXh0IHtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDE1cHg7XFxufVxcblxcbi5yZXRyeS1zZWxlY3QtYnV0dG9uLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5yZXRyeS1zZWxlY3QtYnV0dG9uIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgcGFkZGluZzogNnB4IDZweCA2cHggOHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1tYWluLWNvbG9yOiAjNGU1YmE2O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3RlcDIvc3R5bGVzL3ZhcmlhYmxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxxQkFBcUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1tYWluLWNvbG9yOiAjNGU1YmE2O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIud2lubmluZy1sb3R0by1mb3JtLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tZm9ybSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tZm9ybS1iYW5uZXItdGV4dCB7XFxuICBtYXJnaW46IDEwcHggMDtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tbGFiZWwge1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tbnVtYmVycy1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogNzAlO1xcbn1cXG5cXG4ud2lubmluZy1sb3R0by13cmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLndpbm5pbmctbG90dG8taW5wdXQtY29udGFpbmVyIHtcXG4gIG1hcmdpbi10b3A6IDEwcHg7XFxufVxcblxcbi53aW5uaW5nLWxvdHRvLWlucHV0IHtcXG4gIHdpZHRoOiAzNHB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTgwLCAxODAsIDE4MCwgMSk7XFxufVxcblxcbi5ib251cy1udW1iZXItY29udGFpbmVyIHtcXG4gIHdpZHRoOiAzMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmJvbnVzLW51bWJlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG59XFxuXFxuLmJvbnVzLW51bWJlci1pbnB1dC13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbn1cXG5cXG4ucmVzdWx0LWJ1dHRvbi1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW4tdG9wOiAzMHB4O1xcbn1cXG5cXG4ucmVzdWx0LWJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDZweCA2cHggNnB4IDhweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0ZXAyL3N0eWxlcy93aW5uaW5nTG90dG9JbnB1dC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2Isd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsd0JBQXdCO0VBQ3hCLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIud2lubmluZy1sb3R0by1mb3JtLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tZm9ybSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tZm9ybS1iYW5uZXItdGV4dCB7XFxuICBtYXJnaW46IDEwcHggMDtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tbGFiZWwge1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLndpbm5pbmctbG90dG8tbnVtYmVycy1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogNzAlO1xcbn1cXG5cXG4ud2lubmluZy1sb3R0by13cmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLndpbm5pbmctbG90dG8taW5wdXQtY29udGFpbmVyIHtcXG4gIG1hcmdpbi10b3A6IDEwcHg7XFxufVxcblxcbi53aW5uaW5nLWxvdHRvLWlucHV0IHtcXG4gIHdpZHRoOiAzNHB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTgwLCAxODAsIDE4MCwgMSk7XFxufVxcblxcbi5ib251cy1udW1iZXItY29udGFpbmVyIHtcXG4gIHdpZHRoOiAzMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmJvbnVzLW51bWJlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG59XFxuXFxuLmJvbnVzLW51bWJlci1pbnB1dC13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbn1cXG5cXG4ucmVzdWx0LWJ1dHRvbi1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW4tdG9wOiAzMHB4O1xcbn1cXG5cXG4ucmVzdWx0LWJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDZweCA2cHggNnB4IDhweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgY29uc3QgaW5pdGlhbGl6ZUlucHV0VmFsdWUgPSAodGFyZ2V0SW5wdXQpID0+IHtcbiAgdGFyZ2V0SW5wdXQudmFsdWUgPSAnJztcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRDbGFzc05hbWVIYW5kbGVyID0gKHRhcmdldFRhZywgY2xhc3NOYW1lKSA9PiB7XG4gIHRhcmdldFRhZy5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG59O1xuXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2xhc3NOYW1lSGFuZGxlciA9ICh0YXJnZXRUYWcsIGNsYXNzTmFtZSkgPT4ge1xuICB0YXJnZXRUYWcuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHJlbG9hZFBhZ2UgPSAoKSA9PiB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbn07XG4iLCJjb25zdCBMT1RUT19TRVRUSU5HID0gT2JqZWN0LmZyZWV6ZSh7XG4gIE1JTl9QUklDRTogMTAwMCxcbiAgTUFYX1BSSUNFOiAxMDAwMDAsXG4gIE1JTl9OVU06IDEsXG4gIE1BWF9OVU06IDQ1LFxuICBWQUxJRF9MRU5HVEg6IDYsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTE9UVE9fU0VUVElORztcbiIsImNsYXNzIEFwcEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAvKipcbiAgICogQHR5cGUgeyBzdHJpbmcgfVxuICAgKi9cbiAgc3RhdGljIFBSRUZJWCA9ICfinYwnO1xuXG4gIC8qKlxuICAgKiBAdHlwZSB7IHN0cmluZyB9XG4gICAqL1xuICBuYW1lO1xuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0geyBzdHJpbmcgfSBlcnJvck1lc3NhZ2VcbiAgICovXG5cbiAgY29uc3RydWN0b3IoZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGAke0FwcEVycm9yLlBSRUZJWH0gJHtlcnJvck1lc3NhZ2V9XFxuYDtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwRXJyb3I7XG4iLCJjb25zdCBFUlJPUl9NRVNTQUdFID0gT2JqZWN0LmZyZWV6ZSh7XG4gIElOVkFMSURfTUlOX01PTkVZOiAn7LWc7IaMIOq1rOyehSDquIjslaHsnYAgMTAwMOybkCDsnbTsg4HsnbTslrTslbztlbTsmpQhJyxcbiAgT1ZFUl9NQVhfUFJJQ0U6ICfstZzrjIAg6rWs7J6FIOq4iOyVoeydgCAxMDAsMDAw7JuQ7J207JeQ7JqUIScsXG4gIE5PX0FOWV9JTlBVVDogJycsXG4gIEhBVkVfRFVQTElDQVRJT05fT0ZfTE9UVE9fTlVNQkVSOiAn66Gc65iQIOuyiO2YuOyXkCDspJHrs7XrkJwg7Iir7J6Q6rCAIOyhtOyerO2VqeuLiOuLpC4nLFxuICBPVVRfT0ZfUkFOR0U6ICfroZzrmJAg67KI7Zi464qUIDHsnbTsg4EgNDXsnbTtlZjsnZgg7Iir7J6Q7Jes7JW87ZW07JqUIScsXG4gIElOVkFMSURfTEVOR1RIOiAn66Gc65iQIOuyiO2YuOuKlCDstJ0gNuqwnOyXrOyVvO2VtOyalCEnLFxuICBJTlZBTElEX1JFVFJZX0lOUFVUOiAneeuCmCBu7J2EIOyeheugpe2VtOyjvOyEuOyalCEnLFxuICBJTlZBTElEX1RZUEU6ICfqtazsnoUg6riI7JWh7J2AIOyIq+yekOyXrOyVvO2VtOyalCEnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEVSUk9SX01FU1NBR0U7XG4iLCJpbXBvcnQgTE9UVE9fU0VUVElORyBmcm9tICcuLi9Db25zdGFudHMvbG90dG9TZXR0aW5nLmpzJztcbmltcG9ydCBBcHBFcnJvciBmcm9tICcuLi9FcnJvci9BcHBFcnJvci5qcyc7XG5pbXBvcnQgRVJST1JfTUVTU0FHRSBmcm9tICcuLi9Db25zdGFudHMvTWVzc2FnZXMvZXJyb3JNZXNzYWdlLmpzJztcblxuY2xhc3MgTW9uZXkge1xuICAjbW9uZXk7XG5cbiAgI3ZhbGlkYXRlTW9uZXkobW9uZXkpIHtcbiAgICB0aGlzLiN2YWxpZGF0ZVR5cGUobW9uZXkpO1xuICAgIHRoaXMuI3ZhbGlkYXRlTWluUHJpY2UobW9uZXkpO1xuICAgIHRoaXMuI3ZhbGlkYXRlTWF4UHJpY2UobW9uZXkpO1xuICB9XG5cbiAgI3ZhbGlkYXRlTWluUHJpY2UobW9uZXkpIHtcbiAgICBpZiAobW9uZXkgPCBMT1RUT19TRVRUSU5HLk1JTl9QUklDRSkge1xuICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKEVSUk9SX01FU1NBR0UuSU5WQUxJRF9NSU5fTU9ORVkpO1xuICAgIH1cbiAgfVxuXG4gICN2YWxpZGF0ZU1heFByaWNlKG1vbmV5KSB7XG4gICAgaWYgKG1vbmV5ID4gTE9UVE9fU0VUVElORy5NQVhfUFJJQ0UpIHtcbiAgICAgIHRocm93IG5ldyBBcHBFcnJvcihFUlJPUl9NRVNTQUdFLk9WRVJfTUFYX1BSSUNFKTtcbiAgICB9XG4gIH1cblxuICAjdmFsaWRhdGVUeXBlKG1vbmV5KSB7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKG1vbmV5KSkge1xuICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKEVSUk9SX01FU1NBR0UuSU5WQUxJRF9UWVBFKTtcbiAgICB9XG4gIH1cblxuICByZWNlaXZlSW5qZWN0aW9uVmFsdWUobW9uZXkpIHtcbiAgICB0aGlzLiN2YWxpZGF0ZU1vbmV5KG1vbmV5KTtcbiAgICB0aGlzLiNtb25leSA9IG1vbmV5O1xuICB9XG5cbiAgZ2V0TW9uZXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuI21vbmV5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1vbmV5O1xuIiwiLyoqXG4gKiDsi5zsnpEg7Iir7J6Q7JmAIOuBnSDsiKvsnpDrpbwg67Cb7JWE7IScIO2VtOuLuSDrspTsnITsnZgg656c642k7ZWcIOyIq+yekOulvCDrsJjtmZgg7ZWp64uI64ukLlxuICogQHBhcmFtIHsgbnVtYmVyIH0gc3RhcnRcbiAqIEBwYXJhbSB7IG51bWJlciB9IGVuZFxuICogQHJldHVybnMgeyBudW1iZXIgfVxuICovXG5cbmNvbnN0IGdlbmVyYXRlUmFuZG9tTnVtYmVyRnJvbVJhbmdlID0gKHN0YXJ0LCBlbmQpID0+IHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChlbmQgLSBzdGFydCArIDEpKSArIHN0YXJ0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVSYW5kb21OdW1iZXJGcm9tUmFuZ2U7XG4iLCIvKipcbiAqIE9iamVjdC5mcmVlemUg64qUIOyWleydgCDrj5nqsrDroZwg7J247ZWY7JesIOqwneyytCDslYjsnZgg6rCd7LK07JeQIOuMgO2VnCDrtojrs4DshLHsnYQg7JmE7KCE7Z6IIOuztOyepe2VtOyjvOynhCDrqrvtlanri4jri6QuXG4gKiBkZWVwRnJlZXplIOuKlCDsnqzqt4Drpbwg7Ya17ZW0IOq5iuydgCDrj5nqsrDsnYQg7ZW07KO87Ja07IScIOu2iOuzgOyEseydhCDrs7TsnqXtlbTspI3ri4jri6QuXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9rby9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvZnJlZXplXG4gKiBAcGFyYW0geyBvYmplY3QgfSBvYmplY3RcbiAqIEByZXR1cm5zIHsgb2JqZWN0IH1cbiAqL1xuY29uc3QgZGVlcEZyZWV6ZSA9IChvYmplY3QpID0+IHtcbiAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKChwcm9wKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBvYmplY3RbcHJvcF0gPT09ICdvYmplY3QnICYmICFPYmplY3QuaXNGcm96ZW4ob2JqZWN0W3Byb3BdKSkge1xuICAgICAgZGVlcEZyZWV6ZShvYmplY3RbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKG9iamVjdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWVwRnJlZXplO1xuIiwiaW1wb3J0IGRlZXBGcmVlemUgZnJvbSAnLi4vVXRpbHMvZGVlcEZyZWV6ZS5qcyc7XG5cbmNvbnN0IE1BVENIX0NPVU5UX0NPTkRJVElPTiA9IGRlZXBGcmVlemUoe1xuICBGSVJTVDoge1xuICAgIENPVU5UOiA2LFxuICAgIFJBTks6IDEsXG4gIH0sXG4gIFNFQ09ORDoge1xuICAgIENPVU5UOiA1LFxuICAgIFJBTks6IDIsXG4gIH0sXG4gIFRISVJEOiB7XG4gICAgQ09VTlQ6IDUsXG4gICAgUkFOSzogMyxcbiAgfSxcbiAgRk9VUlRIOiB7XG4gICAgQ09VTlQ6IDQsXG4gICAgUkFOSzogNCxcbiAgfSxcbiAgRklGVEg6IHtcbiAgICBDT1VOVDogMyxcbiAgICBSQU5LOiA1LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE1BVENIX0NPVU5UX0NPTkRJVElPTjtcbiIsImltcG9ydCBNQVRDSF9DT1VOVF9DT05ESVRJT04gZnJvbSAnLi4vQ29uc3RhbnRzL21hdGNoQ291bnRDb25kaXRpb24uanMnO1xuXG5jbGFzcyBSZXdhcmRHZW5lcmF0b3Ige1xuICAjdG90YWxSZXdhcmRSZXN1bHQgPSBbXG4gICAge1xuICAgICAgcmFuazogMSxcbiAgICAgIGNvdW50OiAwLFxuICAgIH0sXG4gICAge1xuICAgICAgcmFuazogMixcbiAgICAgIGNvdW50OiAwLFxuICAgIH0sXG4gICAge1xuICAgICAgcmFuazogMyxcbiAgICAgIGNvdW50OiAwLFxuICAgIH0sXG4gICAge1xuICAgICAgcmFuazogNCxcbiAgICAgIGNvdW50OiAwLFxuICAgIH0sXG4gICAge1xuICAgICAgcmFuazogNSxcbiAgICAgIGNvdW50OiAwLFxuICAgIH0sXG4gIF07XG5cbiAgI21hdGNoQ291bnQgPSAwO1xuXG4gICNpc0JvbnVzTWF0Y2ggPSBmYWxzZTtcblxuICAvKipcbiAgICog64uo7J28IOuhnOuYkOyZgCDri7nssqgg67KI7Zi466W8IOyduOyekOuhnCDrsJvslYTshJwsIOuTseyImOulvCDqsJzsgrDtlanri4jri6QuXG4gICAqIEBwYXJhbSB7IG51bWJlcltdIH0gbG90dG9OdW1iZXJzXG4gICAqIEBwYXJhbSB7ICB3aW5uaW5nTG90dG9OdW1iZXJzIDogbnVtYmVyW10sIGJvbnVzTnVtYmVyIDogbnVtYmVyIH0gdG90YWxXaW5uaW5nTG90dG9JbmZvXG4gICAqL1xuXG4gIGNhbGN1bGF0ZVJld2FyZFJhbmsobG90dG9OdW1iZXJzLCB0b3RhbFdpbm5pbmdMb3R0b0luZm8pIHtcbiAgICB0aGlzLiNpbml0aWFsaXplRmllbGQoKTtcbiAgICBjb25zdCB7IHdpbm5pbmdMb3R0b051bWJlcnMsIGJvbnVzTnVtYmVyIH0gPSB0b3RhbFdpbm5pbmdMb3R0b0luZm87XG4gICAgdGhpcy4jY29tcGFyZVdpbk51bWJlcihsb3R0b051bWJlcnMsIHdpbm5pbmdMb3R0b051bWJlcnMpO1xuICAgIHRoaXMuI2NvbXBhcmVCb251c051bWJlcihsb3R0b051bWJlcnMsIGJvbnVzTnVtYmVyKTtcbiAgICB0aGlzLiNzZXRSZXdhcmRSYW5rKCk7XG4gIH1cblxuICAjY29tcGFyZVdpbk51bWJlcihsb3R0b051bWJlcnMsIHdpbm5pbmdMb3R0b051bWJlcnMpIHtcbiAgICB3aW5uaW5nTG90dG9OdW1iZXJzLmZvckVhY2goKHdpbk51bWJlcikgPT4ge1xuICAgICAgaWYgKGxvdHRvTnVtYmVycy5pbmNsdWRlcyh3aW5OdW1iZXIpKSB7XG4gICAgICAgIHRoaXMuI21hdGNoQ291bnQgKz0gMTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gICNjb21wYXJlQm9udXNOdW1iZXIobG90dG9OdW1iZXJzLCBib251c051bWJlcikge1xuICAgIGlmICh0aGlzLiNtYXRjaENvdW50ID09PSBNQVRDSF9DT1VOVF9DT05ESVRJT04uU0VDT05ELkNPVU5UICYmIGxvdHRvTnVtYmVycy5pbmNsdWRlcyhib251c051bWJlcikpIHtcbiAgICAgIHRoaXMuI2lzQm9udXNNYXRjaCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgI3NldFJld2FyZFJhbmsoKSB7XG4gICAgdGhpcy4jc2V0Rmlyc3RSYW5rKCk7XG4gICAgdGhpcy4jc2V0U2Vjb25kUmFuaygpO1xuICAgIHRoaXMuI3NldFRoaXJkUmFuaygpO1xuICAgIHRoaXMuI3NldEZvdXJ0aFJhbmsoKTtcbiAgICB0aGlzLiNzZXRGaWZ0aFJhbmsoKTtcbiAgfVxuXG4gICNzZXRGaXJzdFJhbmsoKSB7XG4gICAgaWYgKHRoaXMuI21hdGNoQ291bnQgPT09IE1BVENIX0NPVU5UX0NPTkRJVElPTi5GSVJTVC5DT1VOVCAmJiAhdGhpcy4jaXNCb251c01hdGNoKSB7XG4gICAgICBjb25zdCB0YXJnZXRSYW5rID0gdGhpcy4jdG90YWxSZXdhcmRSZXN1bHQuZmluZCgocmVzdWx0KSA9PiByZXN1bHQucmFuayA9PT0gTUFUQ0hfQ09VTlRfQ09ORElUSU9OLkZJUlNULlJBTkspO1xuICAgICAgdGFyZ2V0UmFuay5jb3VudCArPSAxO1xuICAgIH1cbiAgfVxuXG4gICNzZXRTZWNvbmRSYW5rKCkge1xuICAgIGlmICh0aGlzLiNtYXRjaENvdW50ID09PSBNQVRDSF9DT1VOVF9DT05ESVRJT04uU0VDT05ELkNPVU5UICYmICF0aGlzLmlzQm9udXNNYXRjaCkge1xuICAgICAgY29uc3QgdGFyZ2V0UmFuayA9IHRoaXMuI3RvdGFsUmV3YXJkUmVzdWx0LmZpbmQoKHJlc3VsdCkgPT4gcmVzdWx0LnJhbmsgPT09IE1BVENIX0NPVU5UX0NPTkRJVElPTi5TRUNPTkQuUkFOSyk7XG4gICAgICB0YXJnZXRSYW5rLmNvdW50ICs9IDE7XG4gICAgfVxuICB9XG5cbiAgI3NldFRoaXJkUmFuaygpIHtcbiAgICBpZiAodGhpcy4jbWF0Y2hDb3VudCA9PT0gTUFUQ0hfQ09VTlRfQ09ORElUSU9OLlRISVJELkNPVU5UICYmIHRoaXMuaXNCb251c01hdGNoKSB7XG4gICAgICBjb25zdCB0YXJnZXRSYW5rID0gdGhpcy4jdG90YWxSZXdhcmRSZXN1bHQuZmluZCgocmVzdWx0KSA9PiByZXN1bHQucmFuayA9PT0gTUFUQ0hfQ09VTlRfQ09ORElUSU9OLlRISVJELlJBTkspO1xuICAgICAgdGFyZ2V0UmFuay5jb3VudCArPSAxO1xuICAgIH1cbiAgfVxuXG4gICNzZXRGb3VydGhSYW5rKCkge1xuICAgIGlmICh0aGlzLiNtYXRjaENvdW50ID09PSBNQVRDSF9DT1VOVF9DT05ESVRJT04uRklGVEguQ09VTlQgJiYgIXRoaXMuaXNCb251c01hdGNoKSB7XG4gICAgICBjb25zdCB0YXJnZXRSYW5rID0gdGhpcy4jdG90YWxSZXdhcmRSZXN1bHQuZmluZCgocmVzdWx0KSA9PiByZXN1bHQucmFuayA9PT0gTUFUQ0hfQ09VTlRfQ09ORElUSU9OLkZPVVJUSC5SQU5LKTtcbiAgICAgIHRhcmdldFJhbmsuY291bnQgKz0gMTtcbiAgICB9XG4gIH1cblxuICAjc2V0RmlmdGhSYW5rKCkge1xuICAgIGlmICh0aGlzLiNtYXRjaENvdW50ID09PSBNQVRDSF9DT1VOVF9DT05ESVRJT04uRklGVEguQ09VTlQgJiYgIXRoaXMuaXNCb251c01hdGNoKSB7XG4gICAgICBjb25zdCB0YXJnZXRSYW5rID0gdGhpcy4jdG90YWxSZXdhcmRSZXN1bHQuZmluZCgocmVzdWx0KSA9PiByZXN1bHQucmFuayA9PT0gTUFUQ0hfQ09VTlRfQ09ORElUSU9OLkZJRlRILlJBTkspO1xuICAgICAgdGFyZ2V0UmFuay5jb3VudCArPSAxO1xuICAgIH1cbiAgfVxuXG4gIGdldFRvdGFsUmV3YXJkUmVzdWx0KCkge1xuICAgIHJldHVybiB0aGlzLiN0b3RhbFJld2FyZFJlc3VsdDtcbiAgfVxuXG4gICNpbml0aWFsaXplRmllbGQoKSB7XG4gICAgdGhpcy4jbWF0Y2hDb3VudCA9IDA7XG4gICAgdGhpcy4jaXNCb251c01hdGNoID0gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmV3YXJkR2VuZXJhdG9yO1xuIiwiaW1wb3J0IExPVFRPX1NFVFRJTkcgZnJvbSAnLi4vQ29uc3RhbnRzL2xvdHRvU2V0dGluZy5qcyc7XG5pbXBvcnQgRVJST1JfTUVTU0FHRSBmcm9tICcuLi9Db25zdGFudHMvTWVzc2FnZXMvZXJyb3JNZXNzYWdlLmpzJztcbmltcG9ydCBBcHBFcnJvciBmcm9tICcuLi9FcnJvci9BcHBFcnJvci5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvdHRvIHtcbiAgI251bWJlcnM7XG5cbiAgY29uc3RydWN0b3IobnVtYmVycykge1xuICAgIHRoaXMuI251bWJlcnMgPSBudW1iZXJzLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgICB0aGlzLiN2YWxpZGF0ZUxvdHRvTnVtYmVycygpO1xuICB9XG5cbiAgI3ZhbGlkYXRlTG90dG9OdW1iZXJzKCkge1xuICAgIHRoaXMuI3ZhbGlkYXRlTG90dG9OdW1iZXJSYW5nZSgpO1xuICAgIHRoaXMuI3ZhbGlkYXRlRHVwbGljYXRpb24oKTtcbiAgICB0aGlzLiN2YWxpZGF0ZUxvdHRvTGVuZ3RoKCk7XG4gIH1cblxuICAjdmFsaWRhdGVMb3R0b051bWJlclJhbmdlKCkge1xuICAgIGlmICghdGhpcy4jbnVtYmVycy5ldmVyeSgobnVtYmVyKSA9PiBudW1iZXIgPj0gTE9UVE9fU0VUVElORy5NSU5fTlVNICYmIG51bWJlciA8PSBMT1RUT19TRVRUSU5HLk1BWF9OVU0pKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwRXJyb3IoRVJST1JfTUVTU0FHRS5PVVRfT0ZfUkFOR0UpO1xuICAgIH1cbiAgfVxuXG4gICN2YWxpZGF0ZUR1cGxpY2F0aW9uKCkge1xuICAgIGlmIChuZXcgU2V0KFsuLi50aGlzLiNudW1iZXJzXSkuc2l6ZSAhPT0gTE9UVE9fU0VUVElORy5WQUxJRF9MRU5HVEgpIHtcbiAgICAgIHRocm93IG5ldyBBcHBFcnJvcihFUlJPUl9NRVNTQUdFLkhBVkVfRFVQTElDQVRJT05fT0ZfTE9UVE9fTlVNQkVSKTtcbiAgICB9XG4gIH1cblxuICAjdmFsaWRhdGVMb3R0b0xlbmd0aCgpIHtcbiAgICBpZiAodGhpcy4jbnVtYmVycy5sZW5ndGggIT09IExPVFRPX1NFVFRJTkcuVkFMSURfTEVOR1RIKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwRXJyb3IoRVJST1JfTUVTU0FHRS5JTlZBTElEX0xFTkdUSCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0TG90dG9OdW1iZXJzKCkge1xuICAgIHJldHVybiBbLi4udGhpcy4jbnVtYmVyc107XG4gIH1cbn1cbiIsImltcG9ydCBkZWVwRnJlZXplIGZyb20gJy4uL1V0aWxzL2RlZXBGcmVlemUuanMnO1xuXG5jb25zdCBMT1RUT19SRVdBUkQgPSBkZWVwRnJlZXplKHtcbiAgMToge1xuICAgIHByaXplOiAyXzAwMF8wMDBfMDAwLFxuICAgIG1lc3NhZ2U6ICc26rCcIOydvOy5mCAoMiwwMDAsMDAwLDAwMOybkCkgLSAnLFxuICB9LFxuICAyOiB7XG4gICAgcHJpemU6IDMwXzAwMF8wMDAsXG4gICAgbWVzc2FnZTogJzXqsJwg7J287LmYLCDrs7TrhIjsiqQg67O8IOydvOy5mCAoMzAsMDAwLDAwMOybkCkgLSAnLFxuICB9LFxuICAzOiB7XG4gICAgcHJpemU6IDFfNTAwXzAwMCxcbiAgICBtZXNzYWdlOiAnNeqwnCDsnbzsuZggKDEsNTAwLDAwMOybkCkgLSAnLFxuICB9LFxuICA0OiB7XG4gICAgcHJpemU6IDUwXzAwMCxcbiAgICBtZXNzYWdlOiAnNOqwnCDsnbzsuZggKDUwLDAwMOybkCkgLSAnLFxuICB9LFxuICA1OiB7XG4gICAgcHJpemU6IDVfMDAwLFxuICAgIG1lc3NhZ2U6ICcz6rCcIOydvOy5mCAoNSwwMDDsm5ApIC0gJyxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBMT1RUT19SRVdBUkQ7XG4iLCJpbXBvcnQgTE9UVE9fU0VUVElORyBmcm9tICcuLi9Db25zdGFudHMvbG90dG9TZXR0aW5nLmpzJztcbmltcG9ydCBnZW5lcmF0ZVJhbmRvbU51bWJlckZyb21SYW5nZSBmcm9tICcuLi9VdGlscy9nZW5lcmF0ZVJhbmRvbU51bWJlckZyb21SYW5nZS5qcyc7XG5pbXBvcnQgUmV3YXJkR2VuZXJhdG9yIGZyb20gJy4vUmV3YXJkR2VuZXJhdG9yLmpzJztcbmltcG9ydCBMb3R0byBmcm9tICcuL0xvdHRvLmpzJztcbmltcG9ydCBMT1RUT19SRVdBUkQgZnJvbSAnLi4vQ29uc3RhbnRzL2xvdHRvUmV3YXJkLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG90dG9NYWNoaW5lIHtcbiAgI3RvdGFsUHJpemUgPSAwO1xuXG4gICNib3VnaHRMb3R0b3M7XG5cbiAgI3Jld2FyZEdlbmVyYXRvcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLiNyZXdhcmRHZW5lcmF0b3IgPSBuZXcgUmV3YXJkR2VuZXJhdG9yKCk7XG4gIH1cblxuICBtYWtlTG90dG9CeU1vbmV5KG1vbmV5KSB7XG4gICAgY29uc3QgdG90YWxCb3VnaHRMb3R0b0NvdW50ID0gTWF0aC5mbG9vcihtb25leSAvIExPVFRPX1NFVFRJTkcuTUlOX1BSSUNFKTtcblxuICAgIHRoaXMuI2JvdWdodExvdHRvcyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IHRvdGFsQm91Z2h0TG90dG9Db3VudCB9LCAoKSA9PiB7XG4gICAgICBjb25zdCBuZXdMb3R0byA9IHRoaXMuI21ha2VOZXdMb3R0bygpO1xuICAgICAgcmV0dXJuIG5ldyBMb3R0byhuZXdMb3R0bykuZ2V0TG90dG9OdW1iZXJzKCk7XG4gICAgfSk7XG4gIH1cblxuICAjbWFrZU5ld0xvdHRvKCkge1xuICAgIGNvbnN0IGxvdHRvU2V0ID0gbmV3IFNldCgpO1xuXG4gICAgd2hpbGUgKGxvdHRvU2V0LnNpemUgIT09IExPVFRPX1NFVFRJTkcuVkFMSURfTEVOR1RIKSB7XG4gICAgICBjb25zdCByYW5kb21Mb3R0b051bWJlciA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyRnJvbVJhbmdlKExPVFRPX1NFVFRJTkcuTUlOX05VTSwgTE9UVE9fU0VUVElORy5NQVhfTlVNKTtcbiAgICAgIGxvdHRvU2V0LmFkZChyYW5kb21Mb3R0b051bWJlcik7XG4gICAgfVxuICAgIHJldHVybiBbLi4ubG90dG9TZXRdO1xuICB9XG5cbiAgZ2V0TG90dG9zKCkge1xuICAgIHJldHVybiBbLi4udGhpcy4jYm91Z2h0TG90dG9zXTtcbiAgfVxuXG4gIC8qKlxuICAgKiDri7nssqgg67KI7Zi47JmAIOuztOuEiOyKpCDrsojtmLjrpbwg64u07J2AIOqwneyytOulvCDsnbjsnpDroZwg67Cb7JWE7IScLCDsoITssrTsoIHsnbgg65Ox7IiYIOuhnOyngeydhCDsi6Ttlontlanri4jri6QuXG4gICAqIEBwYXJhbSB7IG9iamVjdHt9IH0gdG90YWxXaW5uaW5nTG90dG9JbmZvXG4gICAqIEByZXR1cm5zIHsgcmV3YXJkUmVzdWx0W10gfVxuICAgKi9cblxuICBnZXRSZXdhcmRSZXN1bHQodG90YWxXaW5uaW5nTG90dG9JbmZvKSB7XG4gICAgdGhpcy4jYm91Z2h0TG90dG9zLmZvckVhY2goKGxvdHRvTnVtYmVyKSA9PiB7XG4gICAgICB0aGlzLiNyZXdhcmRHZW5lcmF0b3IuY2FsY3VsYXRlUmV3YXJkUmFuayhsb3R0b051bWJlciwgdG90YWxXaW5uaW5nTG90dG9JbmZvKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHRvdGFsUmV3YXJkUmVzdWx0ID0gdGhpcy4jcmV3YXJkR2VuZXJhdG9yLmdldFRvdGFsUmV3YXJkUmVzdWx0KCkuc29ydCgoYSwgYikgPT4gYi5yYW5rIC0gYS5yYW5rKTtcblxuICAgIHRoaXMuI2NhbGN1bGF0ZVRvdGFsUHJpemUodG90YWxSZXdhcmRSZXN1bHQpO1xuXG4gICAgcmV0dXJuIHRvdGFsUmV3YXJkUmVzdWx0O1xuICB9XG5cbiAgI2NhbGN1bGF0ZVRvdGFsUHJpemUodG90YWxSZXdhcmRSZXN1bHQpIHtcbiAgICB0b3RhbFJld2FyZFJlc3VsdC5mb3JFYWNoKChyZXdhcmRSZXN1bHQpID0+IHtcbiAgICAgIGlmIChyZXdhcmRSZXN1bHQuY291bnQpIHtcbiAgICAgICAgdGhpcy4jdG90YWxQcml6ZSArPSBMT1RUT19SRVdBUkRbcmV3YXJkUmVzdWx0LnJhbmtdLnByaXplO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZ2V0UmF0ZU9mSW5jb21lKG1vbmV5KSB7XG4gICAgcmV0dXJuIE51bWJlcigoKHRoaXMuI3RvdGFsUHJpemUgLyBtb25leSkgKiAxMDApLnRvRml4ZWQoMSkpLnRvTG9jYWxlU3RyaW5nKCk7XG4gIH1cbn1cbiIsImltcG9ydCBMb3R0byBmcm9tICcuL0xvdHRvLmpzJztcbmltcG9ydCBFUlJPUl9NRVNTQUdFIGZyb20gJy4uL0NvbnN0YW50cy9NZXNzYWdlcy9lcnJvck1lc3NhZ2UuanMnO1xuaW1wb3J0IExPVFRPX1NFVFRJTkcgZnJvbSAnLi4vQ29uc3RhbnRzL2xvdHRvU2V0dGluZy5qcyc7XG5pbXBvcnQgQXBwRXJyb3IgZnJvbSAnLi4vRXJyb3IvQXBwRXJyb3IuanMnO1xuXG5jbGFzcyBXaW5uaW5nTG90dG8ge1xuICAjd2lubmluZ0xvdHRvTnVtYmVycztcblxuICAjYm9udXNOdW1iZXI7XG5cbiAgc2V0V2luTG90dG9OdW1iZXJzKHdpbkxvdHRvTnVtYmVycykge1xuICAgIHRoaXMuI3dpbm5pbmdMb3R0b051bWJlcnMgPSBuZXcgTG90dG8od2luTG90dG9OdW1iZXJzKS5nZXRMb3R0b051bWJlcnMoKTtcbiAgfVxuXG4gIHNldEJvbnVzTnVtYmVyKGJvbnVzTnVtYmVyKSB7XG4gICAgdGhpcy4jdmFsaWRhdGVCb251c051bWJlcihib251c051bWJlcik7XG4gICAgdGhpcy4jYm9udXNOdW1iZXIgPSBib251c051bWJlcjtcbiAgfVxuXG4gICN2YWxpZGF0ZUJvbnVzTnVtYmVyKGJvbnVzTnVtYmVyKSB7XG4gICAgdGhpcy4jdmFsaWRhdGVSYW5nZShib251c051bWJlcik7XG4gICAgdGhpcy4jdmFsaWRhdGVEdXBsaWNhdGUoYm9udXNOdW1iZXIpO1xuICB9XG5cbiAgI3ZhbGlkYXRlUmFuZ2UoYm9udXNOdW1iZXIpIHtcbiAgICBpZiAoYm9udXNOdW1iZXIgPCBMT1RUT19TRVRUSU5HLk1JTl9OVU0gfHwgYm9udXNOdW1iZXIgPiBMT1RUT19TRVRUSU5HLk1BWF9OVU0pIHtcbiAgICAgIHRocm93IG5ldyBBcHBFcnJvcihFUlJPUl9NRVNTQUdFLk9VVF9PRl9SQU5HRSk7XG4gICAgfVxuICB9XG5cbiAgI3ZhbGlkYXRlRHVwbGljYXRlKGJvbnVzTnVtYmVyKSB7XG4gICAgaWYgKHRoaXMuI3dpbm5pbmdMb3R0b051bWJlcnMuaW5jbHVkZXMoYm9udXNOdW1iZXIpKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwRXJyb3IoRVJST1JfTUVTU0FHRS5IQVZFX0RVUExJQ0FUSU9OX09GX0xPVFRPX05VTUJFUik7XG4gICAgfVxuICB9XG5cbiAgZ2V0V2luTG90dG9OdW1iZXJzKCkge1xuICAgIHJldHVybiB7XG4gICAgICB3aW5uaW5nTG90dG9OdW1iZXJzOiB0aGlzLiN3aW5uaW5nTG90dG9OdW1iZXJzLFxuICAgICAgYm9udXNOdW1iZXI6IHRoaXMuI2JvbnVzTnVtYmVyLFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2lubmluZ0xvdHRvO1xuIiwiaW1wb3J0IE1vbmV5IGZyb20gJy4uL0RvbWFpbi9Nb25leS5qcyc7XG5pbXBvcnQgTG90dG9NYWNoaW5lIGZyb20gJy4uL0RvbWFpbi9Mb3R0b01hY2hpbmUuanMnO1xuaW1wb3J0IFdpbm5pbmdMb3R0byBmcm9tICcuLi9Eb21haW4vV2lubmluZ0xvdHRvLmpzJztcblxuZXhwb3J0IGNvbnN0IG1vbmV5ID0gbmV3IE1vbmV5KCk7XG5leHBvcnQgY29uc3QgbG90dG9NYWNoaW5lID0gbmV3IExvdHRvTWFjaGluZSgpO1xuZXhwb3J0IGNvbnN0IHdpbm5pbmdMb3R0byA9IG5ldyBXaW5uaW5nTG90dG8oKTtcbiIsImNvbnN0IFBST0dSRVNTX01FU1NBR0UgPSBPYmplY3QuZnJlZXplKHtcbiAgSU5QVVRfTU9ORVk6ICfqtazsnoXquIjslaHsnYQg7J6F66Cl7ZW0IOyjvOyEuOyalC4nLFxuICBJTlBVVF9XSU5OSU5HX0xPVFRPOiAn64u57LKoIOuyiO2YuOulvCDsnoXroKXtlbTso7zshLjsmpQuJyxcbiAgSU5QVVRfQk9OVVNfTlVNQkVSOiAn67O064SI7IqkIOuyiO2YuOulvCDsnoXroKXtlbTso7zshLjsmpQuJyxcbiAgU0VMRUNUX1JFX1JVTjogJ+uLpOyLnCDsi5zsnpHtlZjsi5zqsqDsirXri4jquYw/ICh5L24pJyxcbiAgQlVZX0xPVFRPOiAobG90dG9MZW5ndGgpID0+IGDstJ0gJHtsb3R0b0xlbmd0aH3qsJzrpbwg6rWs66ek7ZaI7Iq164uI64ukLmAsXG4gIFJFU1VMVF9IRUFERVI6ICfri7nssqgg7Ya16rOEXFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0nLFxuICBSQVRFX09GX1JFVFVSTl9NRVNTQUdFOiAocmF0ZU9mUmV0dXJuKSA9PiBg64u57Iug7J2YIOy0nSDsiJjsnbXrpaDsnYAgJHtyYXRlT2ZSZXR1cm4udG9Mb2NhbGVTdHJpbmcoKX0lIOyeheuLiOuLpC5gLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFBST0dSRVNTX01FU1NBR0U7XG4iLCJjb25zdCBERUxJTUlURVIgPSBPYmplY3QuZnJlZXplKHtcbiAgTE9UVE9fTlVNQkVSX1NFUEVSQVRPUjogJywnLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IERFTElNSVRFUjtcbiIsIi8qKlxuICog7KO87Ja07KeEIOyekeyXheydhCDslYjsoITtlZjqsowg7IiY7ZaJ7ZWY6rOgLCDsl5Drn6wg7LKY66asIOuwjyDsoJXrpqwg7J6R7JeF7J2EIOq0gOumrO2VmOuKlCDtlajsiJguXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBhY3Rpb24g7Iuk7ZaJ7ZWgIOyekeyXheydhCDri7TsnYAg7ZWo7IiYLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXJyb3JIYW5kbGVyIOyXkOufrCDrsJzsg50g7IucIOyLpO2Wie2VoCDsspjrpqwg66Gc7KeB7J2EIOuLtOydgCDtlajsiJguXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmaW5hbEFjdGlvbiDtla3sg4Eg7Iuk7ZaJ7ZW07JW8IO2VmOuKlCDrp4jrrLTrpqwg7J6R7JeF7J2EIOuLtOydgCDtlajsiJguXG4gKi9cblxuY29uc3Qgc2FmZUV2ZW50SGFuZGxlcldpdGhBbGVydEVycm9yID0gKGFjdGlvbiwgZXJyb3JIYW5kbGVyID0gbnVsbCwgZmluYWxBY3Rpb24gPSBudWxsKSA9PiB7XG4gIHRyeSB7XG4gICAgYWN0aW9uKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9ySGFuZGxlcikge1xuICAgICAgZXJyb3JIYW5kbGVyKGVycm9yKTtcbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgaWYgKGZpbmFsQWN0aW9uKSB7XG4gICAgICBmaW5hbEFjdGlvbigpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2FmZUV2ZW50SGFuZGxlcldpdGhBbGVydEVycm9yO1xuIiwiaW1wb3J0IHsgaW5pdGlhbGl6ZUlucHV0VmFsdWUgfSBmcm9tICcuL3VpVXRpbHMuanMnO1xuaW1wb3J0IHsgbW9uZXksIGxvdHRvTWFjaGluZSB9IGZyb20gJy4uL2luc3RhbmNlcy5qcyc7XG5pbXBvcnQgeyByZW5kZXJCb3VnaHRMb3R0b3MsIHJlbmRlckJvdWdodExvdHRvc0xlbmd0aCwgdmlzaWJpbGl6ZVdpbm5pbmdMb3R0b0Zvcm0gfSBmcm9tICcuL2JvdWdodExvdHRvSGFuZGxlcnMuanMnO1xuaW1wb3J0IHNhZmVFdmVudEhhbmRsZXJXaXRoQWxlcnRFcnJvciBmcm9tICcuLi91dGlscy9zYWZlRXZlbnRIYW5kbGVyV2l0aEFsZXJ0RXJyb3IuanMnO1xuXG4vKipcbiAqIOq1rOyehSDquIjslaHsnYQg7J6F66Cl7ZWc7ZuELCDsmKzrsJTrpbgg6rWs7J6FIOq4iOyVoeydtOudvOuptCDtlbTri7kg7J6F66Cl6rCS7J2EIOuwmO2ZmO2VqeuLiOuLpC5cbiAqIEBwYXJhbSB7IHN0cmluZyB9IGlucHV0TW9uZXlcbiAqIEByZXR1cm5zIHsgbnVtYmVyIH1cbiAqL1xuXG5jb25zdCBpbnB1dEJ1eWluZ0xvdHRvTW9uZXkgPSAoaW5wdXRNb25leSkgPT4ge1xuICBtb25leS5yZWNlaXZlSW5qZWN0aW9uVmFsdWUoTnVtYmVyKGlucHV0TW9uZXkpKTtcblxuICByZXR1cm4gbW9uZXkuZ2V0TW9uZXkoKTtcbn07XG5cbi8qKlxuICog6rWs7J6F6riI7JWh7Jy866GcIOustOyekeychCDroZzrmJDrpbwg6rWs66ek7ZWp64uI64ukLlxuICogQHBhcmFtIHsgbnVtYmVyIH0gYnV5aW5nTG90dG9Nb25leVxuICogQHJldHVybnMgeyBudW1iZXJbXSB9XG4gKi9cblxuY29uc3QgYnV5TG90dG9zID0gKGJ1eWluZ0xvdHRvTW9uZXkpID0+IHtcbiAgbG90dG9NYWNoaW5lLm1ha2VMb3R0b0J5TW9uZXkoYnV5aW5nTG90dG9Nb25leSk7XG4gIGNvbnN0IGJvdWdodExvdHRvcyA9IGxvdHRvTWFjaGluZS5nZXRMb3R0b3MoKTtcblxuICByZXR1cm4gYm91Z2h0TG90dG9zO1xufTtcblxuZXhwb3J0IGNvbnN0IGlucHV0TW9uZXlIYW5kbGVyID0gKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gIHNhZmVFdmVudEhhbmRsZXJXaXRoQWxlcnRFcnJvcihcbiAgICAoKSA9PiB7XG4gICAgICBjb25zdCBidXlpbmdMb3R0b01vbmV5ID0gaW5wdXRCdXlpbmdMb3R0b01vbmV5KG1vbmV5SW5wdXQudmFsdWUpO1xuICAgICAgY29uc3QgYm91Z2h0TG90dG9zID0gYnV5TG90dG9zKGJ1eWluZ0xvdHRvTW9uZXkpO1xuICAgICAgcmVuZGVyQm91Z2h0TG90dG9zTGVuZ3RoKGJvdWdodExvdHRvcy5sZW5ndGgpO1xuICAgICAgcmVuZGVyQm91Z2h0TG90dG9zKGJvdWdodExvdHRvcyk7XG4gICAgICB2aXNpYmlsaXplV2lubmluZ0xvdHRvRm9ybSgpO1xuICAgIH0sXG4gICAgKGVycm9yKSA9PiB7XG4gICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICB9LFxuICAgICgpID0+IHtcbiAgICAgIGluaXRpYWxpemVJbnB1dFZhbHVlKG1vbmV5SW5wdXQpO1xuICAgIH0sXG4gICk7XG59O1xuIiwiaW1wb3J0IFBST0dSRVNTX01FU1NBR0UgZnJvbSAnLi4vLi4vQ29uc3RhbnRzL01lc3NhZ2VzL3Byb2dyZXNzTWVzc2FnZS5qcyc7XG5pbXBvcnQgREVMSU1JVEVSIGZyb20gJy4uLy4uL0NvbnN0YW50cy9kZWxpbWl0ZXIuanMnO1xuXG4vKipcbiAqIOq1rOunpO2VnCDroZzrmJAg6rCv7IiY66W8IOugjOuNlOungSDtlanri4jri6QuXG4gKiBAcGFyYW0geyBudW1iZXIgfSBsb3R0b0xlbmd0aFxuICovXG5leHBvcnQgY29uc3QgcmVuZGVyQm91Z2h0TG90dG9zTGVuZ3RoID0gKGJvdWdodExvdHRvc2xMZW5ndGgpID0+IHtcbiAgY29uc3QgcmVzdWx0VGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRUZXh0Jyk7XG4gIHJlc3VsdFRleHQudGV4dENvbnRlbnQgPSBgJHtQUk9HUkVTU19NRVNTQUdFLkJVWV9MT1RUTyhib3VnaHRMb3R0b3NsTGVuZ3RoKX1gO1xufTtcblxuLyoqXG4gKiDqtazrp6TtlZwg66Gc65iQ65Ok7J2EIOugjOuNlOungSDtlanri4jri6QuXG4gKiBAcGFyYW0geyBudW1iZXJbXSB9IGJvdWdodExvdHRvc1xuICovXG5leHBvcnQgY29uc3QgcmVuZGVyQm91Z2h0TG90dG9zID0gKGJvdWdodExvdHRvcykgPT4ge1xuICBib3VnaHRMb3R0b3MuZm9yRWFjaCgobG90dG8pID0+IHtcbiAgICBib3VnaHRMb3R0b3NDb250YWluZXIuaW5uZXJIVE1MICs9IGA8ZGl2IGNsYXNzPVwiYm91Z2h0TG90dG9cIj48cCBjbGFzcyA9XCJsb3R0b0Vtb2ppXCI+8J+On++4jzwvcD4gJHtsb3R0by5qb2luKFxuICAgICAgYCR7REVMSU1JVEVSLkxPVFRPX05VTUJFUl9TRVBFUkFUT1J9IGAsXG4gICAgKX08L2Rpdj5gO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCB2aXNpYmlsaXplV2lubmluZ0xvdHRvRm9ybSA9ICgpID0+IHtcbiAgY29uc3QgcmVzdWx0QW5kV2lubmluZ0xvdHRvQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdEFuZFdpbm5pbmdMb3R0b0NvbnRhaW5lcicpO1xuXG4gIHJlc3VsdEFuZFdpbm5pbmdMb3R0b0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XG59O1xuIiwiaW1wb3J0IHsgd2lubmluZ0xvdHRvIH0gZnJvbSAnLi4vaW5zdGFuY2VzLmpzJztcbmltcG9ydCBMT1RUT19TRVRUSU5HIGZyb20gJy4uLy4uL0NvbnN0YW50cy9sb3R0b1NldHRpbmcuanMnO1xuaW1wb3J0IHNhZmVFdmVudEhhbmRsZXJXaXRoQWxlcnRFcnJvciBmcm9tICcuLi91dGlscy9zYWZlRXZlbnRIYW5kbGVyV2l0aEFsZXJ0RXJyb3IuanMnO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUlucHV0VmFsdWUgfSBmcm9tICcuL3VpVXRpbHMuanMnO1xuXG5jb25zdCB3aW5uaW5nTnVtYmVycyA9IFtdO1xuXG5jb25zdCBmb2N1c05leHRJbnB1dCA9ICh7IGluZGV4LCB3aW5uaW5nTG90dG9JbnB1dHMgfSkgPT4ge1xuICBpZiAoaW5kZXggKyAxIDwgd2lubmluZ0xvdHRvSW5wdXRzLmxlbmd0aCkge1xuICAgIHdpbm5pbmdMb3R0b0lucHV0c1tpbmRleCArIDFdLmZvY3VzKCk7XG4gIH1cbn07XG5cbmNvbnN0IHNldEJvbnVzTnVtYmVyID0gKGJvbnVzTnVtYmVyLCBpbnB1dCkgPT4ge1xuICBzYWZlRXZlbnRIYW5kbGVyV2l0aEFsZXJ0RXJyb3IoXG4gICAgKCkgPT4ge1xuICAgICAgd2lubmluZ0xvdHRvLnNldEJvbnVzTnVtYmVyKGJvbnVzTnVtYmVyKTtcbiAgICB9LFxuICAgIChlcnJvcikgPT4ge1xuICAgICAgYWxlcnQoZXJyb3IubWVzc2FnZSk7XG4gICAgICBpbml0aWFsaXplSW5wdXRWYWx1ZShpbnB1dCk7XG4gICAgfSxcbiAgKTtcbn07XG5cbmNvbnN0IHRvdGFsV2lubmluZ0xvdHRvTnVtYmVyc0hhbmRsZXIgPSAoeyBpbnB1dCwgaW5kZXgsIHdpbm5pbmdMb3R0b0lucHV0cyB9KSA9PiB7XG4gIGNvbnN0IHdpbm5pbmdOdW1iZXIgPSBOdW1iZXIoaW5wdXQudmFsdWUpO1xuXG4gIGlmIChpbmRleCA8IExPVFRPX1NFVFRJTkcuVkFMSURfTEVOR1RIKSB7XG4gICAgZm9jdXNOZXh0SW5wdXQoeyBpbmRleCwgd2lubmluZ0xvdHRvSW5wdXRzIH0pO1xuICAgIHdpbm5pbmdOdW1iZXJzLnB1c2god2lubmluZ051bWJlcik7XG4gIH1cblxuICBpZiAod2lubmluZ051bWJlcnMubGVuZ3RoID09PSBMT1RUT19TRVRUSU5HLlZBTElEX0xFTkdUSCkge1xuICAgIHNhZmVFdmVudEhhbmRsZXJXaXRoQWxlcnRFcnJvcihcbiAgICAgICgpID0+IHtcbiAgICAgICAgd2lubmluZ0xvdHRvLnNldFdpbkxvdHRvTnVtYmVycyh3aW5uaW5nTnVtYmVycyk7XG4gICAgICB9LFxuICAgICAgKGVycm9yKSA9PiB7XG4gICAgICAgIGFsZXJ0KGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB3aW5uaW5nTG90dG9JbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgICAgICBpbml0aWFsaXplSW5wdXRWYWx1ZShpbnB1dCk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICApO1xuICB9XG5cbiAgaWYgKGluZGV4ID09PSBMT1RUT19TRVRUSU5HLlZBTElEX0xFTkdUSCkge1xuICAgIHNldEJvbnVzTnVtYmVyKHdpbm5pbmdOdW1iZXIsIGlucHV0KTtcbiAgICBpbnB1dC5ibHVyKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBpbnB1dFdpbm5pbmdMb3R0b051bWJlcnNIYW5kbGVyID0gKHsgaW5wdXQsIGluZGV4LCB3aW5uaW5nTG90dG9JbnB1dHMgfSkgPT4ge1xuICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRvdGFsV2lubmluZ0xvdHRvTnVtYmVyc0hhbmRsZXIoeyBpbnB1dCwgaW5kZXgsIHdpbm5pbmdMb3R0b0lucHV0cyB9KTtcbiAgICB9XG4gIH0pO1xufTtcbiIsImltcG9ydCB7IGFkZENsYXNzTmFtZUhhbmRsZXIsIHJlbW92ZUNsYXNzTmFtZUhhbmRsZXIgfSBmcm9tICcuL3VpVXRpbHMuanMnO1xuaW1wb3J0IHsgd2lubmluZ0xvdHRvLCBsb3R0b01hY2hpbmUsIG1vbmV5IH0gZnJvbSAnLi4vaW5zdGFuY2VzLmpzJztcbmltcG9ydCBQUk9HUkVTU19NRVNTQUdFIGZyb20gJy4uLy4uL0NvbnN0YW50cy9NZXNzYWdlcy9wcm9ncmVzc01lc3NhZ2UuanMnO1xuXG5jb25zdCBtb2RhbE9wZW5IYW5kbGVyID0gKCkgPT4ge1xuICBjb25zdCBtb2RhbENhcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxDYXJkJyk7XG4gIGFkZENsYXNzTmFtZUhhbmRsZXIobW9kYWxDYXJkLCAnbW9kYWwtb3BlbicpO1xufTtcblxuZXhwb3J0IGNvbnN0IG1vZGFsQ2xvc2VIYW5kbGVyID0gKCkgPT4ge1xuICBjb25zdCBtb2RhbENhcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxDYXJkJyk7XG4gIHJlbW92ZUNsYXNzTmFtZUhhbmRsZXIobW9kYWxDYXJkLCAnbW9kYWwtb3BlbicpO1xufTtcblxuLyoqXG4gKiDstJ0g7IiY7J2166Wg7J2EIOugjOuNlOungSDtlanri4jri6QuXG4gKiBAcGFyYW0geyBudW1iZXIgfSByYXRlT2ZSZXR1cm5cbiAqL1xuXG5jb25zdCByZW5kZXJTdGF0aXN0aWNzUmVzdWx0VGV4dCA9IChyYXRlT2ZSZXR1cm4pID0+IHtcbiAgY29uc3Qgc3RhdGlzdGljc1Jlc3VsdFRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhdGlzdGljc1Jlc3VsdFRleHQnKTtcblxuICBzdGF0aXN0aWNzUmVzdWx0VGV4dC50ZXh0Q29udGVudCA9IFBST0dSRVNTX01FU1NBR0UuUkFURV9PRl9SRVRVUk5fTUVTU0FHRShyYXRlT2ZSZXR1cm4pO1xufTtcblxuY29uc3QgaXNBbHJlYWR5UHJpbnRlZFJhdGVPZlJldHVybiA9ICgpID0+IHtcbiAgY29uc3Qgc3RhdGlzdGljc1Jlc3VsdFRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhdGlzdGljc1Jlc3VsdFRleHQnKS50ZXh0Q29udGVudDtcbiAgcmV0dXJuIHN0YXRpc3RpY3NSZXN1bHRUZXh0ICE9PSAnJztcbn07XG5cbmV4cG9ydCBjb25zdCBzdGF0aXN0aWNzUmVzdWx0SGFuZGxlciA9ICh7IGUsIHdpbm5pbmdDb3VudHMgfSkgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgaWYgKGlzQWxyZWFkeVByaW50ZWRSYXRlT2ZSZXR1cm4oKSkge1xuICAgIG1vZGFsT3BlbkhhbmRsZXIoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBtb2RhbE9wZW5IYW5kbGVyKCk7XG5cbiAgY29uc3QgdG90YWxXaW5uaW5nTG90dG9JbmZvID0gd2lubmluZ0xvdHRvLmdldFdpbkxvdHRvTnVtYmVycygpO1xuICBjb25zdCByZXN1bHQgPSBsb3R0b01hY2hpbmUuZ2V0UmV3YXJkUmVzdWx0KHRvdGFsV2lubmluZ0xvdHRvSW5mbyk7XG5cbiAgd2lubmluZ0NvdW50cy5mb3JFYWNoKCh3aW5uaW5nQ291bnQsIGluZGV4KSA9PiB7XG4gICAgd2lubmluZ0NvdW50LnRleHRDb250ZW50ID0gcmVzdWx0W2luZGV4XS5jb3VudCArICfqsJwnO1xuICB9KTtcblxuICBjb25zdCBidXlpbmdNb25leSA9IG1vbmV5LmdldE1vbmV5KCk7XG4gIGNvbnN0IHJhdGVPZlJldHVybiA9IGxvdHRvTWFjaGluZS5nZXRSYXRlT2ZJbmNvbWUoYnV5aW5nTW9uZXkpO1xuICByZW5kZXJTdGF0aXN0aWNzUmVzdWx0VGV4dChyYXRlT2ZSZXR1cm4pO1xufTtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nbG9iYWxzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2xvYmFscy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hlYWRlci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hlYWRlci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY29udGVudC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbnRlbnQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21vbmV5SW5wdXQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tb25leUlucHV0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi93aW5uaW5nTG90dG9JbnB1dC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3dpbm5pbmdMb3R0b0lucHV0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tb2RhbC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21vZGFsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb290ZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb290ZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGFibGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90YWJsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKipcbiAqIHN0ZXAgMuydmCDsi5zsnpHsoJDsnbQg65CY64qUIO2MjOydvOyeheuLiOuLpC5cbiAqIOuFuOuTnCDtmZjqsr3sl5DshJwg7IKs7Jqp7ZWY64qUIHJlYWRsaW5lIOuTseydhCDrtojrn6zsmKwg6rK97JqwIOygleyDgeyggeycvOuhnCDruYzrk5ztlaAg7IiYIOyXhuyKteuLiOuLpC5cbiAqL1xuXG5pbXBvcnQgeyBpbnB1dE1vbmV5SGFuZGxlciB9IGZyb20gJy4vc3RlcDIvaGFuZGxlcnMvaW5wdXRNb25leUhhbmRsZXIuanMnO1xuaW1wb3J0IHsgaW5wdXRXaW5uaW5nTG90dG9OdW1iZXJzSGFuZGxlciB9IGZyb20gJy4vc3RlcDIvaGFuZGxlcnMvaW5wdXRXaW5uaW5nTG90dG9OdW1iZXJzSGFuZGxlci5qcyc7XG5pbXBvcnQgeyBzdGF0aXN0aWNzUmVzdWx0SGFuZGxlciwgbW9kYWxDbG9zZUhhbmRsZXIgfSBmcm9tICcuL3N0ZXAyL2hhbmRsZXJzL3N0YXRpc3RpY3NSZXN1bHRIYW5kbGVyLmpzJztcbmltcG9ydCB7IHJlbG9hZFBhZ2UgfSBmcm9tICcuL3N0ZXAyL2hhbmRsZXJzL3VpVXRpbHMuanMnO1xuaW1wb3J0ICcuL3N0ZXAyL3N0eWxlcy9nbG9iYWxzLmNzcyc7XG5pbXBvcnQgJy4vc3RlcDIvc3R5bGVzL21haW4uY3NzJztcbmltcG9ydCAnLi9zdGVwMi9zdHlsZXMvaGVhZGVyLmNzcyc7XG5pbXBvcnQgJy4vc3RlcDIvc3R5bGVzL2NvbnRlbnQuY3NzJztcbmltcG9ydCAnLi9zdGVwMi9zdHlsZXMvbW9uZXlJbnB1dC5jc3MnO1xuaW1wb3J0ICcuL3N0ZXAyL3N0eWxlcy93aW5uaW5nTG90dG9JbnB1dC5jc3MnO1xuaW1wb3J0ICcuL3N0ZXAyL3N0eWxlcy9tb2RhbC5jc3MnO1xuaW1wb3J0ICcuL3N0ZXAyL3N0eWxlcy9mb290ZXIuY3NzJztcbmltcG9ydCAnLi9zdGVwMi9zdHlsZXMvdmFyaWFibGVzLmNzcyc7XG5pbXBvcnQgJy4vc3RlcDIvc3R5bGVzL3RhYmxlLmNzcyc7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gIGNvbnN0IG1vbmV5SW5wdXRGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vbmV5SW5wdXRGb3JtJyk7XG4gIGNvbnN0IHdpbm5pbmdMb3R0b0lucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy53aW5uaW5nLWxvdHRvLWlucHV0Jyk7XG4gIGNvbnN0IHdpbm5pbmdMb3R0b0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2lubmluZ0xvdHRvRm9ybScpO1xuICBjb25zdCBtb2RhbENsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsQ2xvc2VCdXR0b24nKTtcbiAgY29uc3Qgd2lubmluZ0NvdW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tYXRjaC1jb3VudC10ZXh0Jyk7XG4gIGNvbnN0IHJldHJ5U2VsZWN0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JldHJ5U2VsZWN0QnV0dG9uJyk7XG5cbiAgbW9uZXlJbnB1dEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgaW5wdXRNb25leUhhbmRsZXIpO1xuICB3aW5uaW5nTG90dG9JbnB1dHMuZm9yRWFjaCgoaW5wdXQsIGluZGV4KSA9PiB7XG4gICAgaW5wdXRXaW5uaW5nTG90dG9OdW1iZXJzSGFuZGxlcih7IGlucHV0LCBpbmRleCwgd2lubmluZ0xvdHRvSW5wdXRzIH0pO1xuICB9KTtcbiAgd2lubmluZ0xvdHRvRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4gc3RhdGlzdGljc1Jlc3VsdEhhbmRsZXIoeyBlLCB3aW5uaW5nQ291bnRzIH0pKTtcbiAgbW9kYWxDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1vZGFsQ2xvc2VIYW5kbGVyKTtcbiAgcmV0cnlTZWxlY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCByZWxvYWRQYWdlKTtcbn0pO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImluaXRpYWxpemVJbnB1dFZhbHVlIiwidGFyZ2V0SW5wdXQiLCJ2YWx1ZSIsInJlbG9hZFBhZ2UiLCJsb2NhdGlvbiIsInJlbG9hZCIsImZyZWV6ZSIsIk1JTl9QUklDRSIsIk1BWF9QUklDRSIsIk1JTl9OVU0iLCJNQVhfTlVNIiwiVkFMSURfTEVOR1RIIiwiQXBwRXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJtZXNzYWdlIiwiUFJFRklYIiwibmFtZSIsImNvbnN0cnVjdG9yIiwiSU5WQUxJRF9NSU5fTU9ORVkiLCJPVkVSX01BWF9QUklDRSIsIk5PX0FOWV9JTlBVVCIsIkhBVkVfRFVQTElDQVRJT05fT0ZfTE9UVE9fTlVNQkVSIiwiT1VUX09GX1JBTkdFIiwiSU5WQUxJRF9MRU5HVEgiLCJJTlZBTElEX1JFVFJZX0lOUFVUIiwiSU5WQUxJRF9UWVBFIiwiTW9uZXkiLCJtb25leSIsIkxPVFRPX1NFVFRJTkciLCJFUlJPUl9NRVNTQUdFIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwic3RhcnQiLCJlbmQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJkZWVwRnJlZXplIiwib2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJpc0Zyb3plbiIsIkZJUlNUIiwiQ09VTlQiLCJSQU5LIiwiU0VDT05EIiwiVEhJUkQiLCJGT1VSVEgiLCJGSUZUSCIsImxvdHRvTnVtYmVycyIsIndpbm5pbmdMb3R0b051bWJlcnMiLCJ3aW5OdW1iZXIiLCJpbmNsdWRlcyIsImJvbnVzTnVtYmVyIiwiTUFUQ0hfQ09VTlRfQ09ORElUSU9OIiwiZmluZCIsInJhbmsiLCJpc0JvbnVzTWF0Y2giLCJ0b3RhbFdpbm5pbmdMb3R0b0luZm8iLCJMb3R0byIsIm51bWJlcnMiLCJzb3J0IiwiYiIsImV2ZXJ5IiwibnVtYmVyIiwiU2V0Iiwic2l6ZSIsInByaXplIiwiTG90dG9NYWNoaW5lIiwiUmV3YXJkR2VuZXJhdG9yIiwidG90YWxCb3VnaHRMb3R0b0NvdW50IiwiQXJyYXkiLCJmcm9tIiwibmV3TG90dG8iLCJnZXRMb3R0b051bWJlcnMiLCJsb3R0b051bWJlciIsImNhbGN1bGF0ZVJld2FyZFJhbmsiLCJ0b3RhbFJld2FyZFJlc3VsdCIsImdldFRvdGFsUmV3YXJkUmVzdWx0IiwidG9GaXhlZCIsInRvTG9jYWxlU3RyaW5nIiwibG90dG9TZXQiLCJyYW5kb21Mb3R0b051bWJlciIsImdlbmVyYXRlUmFuZG9tTnVtYmVyRnJvbVJhbmdlIiwiYWRkIiwicmV3YXJkUmVzdWx0IiwiTE9UVE9fUkVXQVJEIiwid2luTG90dG9OdW1iZXJzIiwibG90dG9NYWNoaW5lIiwid2lubmluZ0xvdHRvIiwiV2lubmluZ0xvdHRvIiwiSU5QVVRfTU9ORVkiLCJJTlBVVF9XSU5OSU5HX0xPVFRPIiwiSU5QVVRfQk9OVVNfTlVNQkVSIiwiU0VMRUNUX1JFX1JVTiIsIkJVWV9MT1RUTyIsImxvdHRvTGVuZ3RoIiwiUkVTVUxUX0hFQURFUiIsIlJBVEVfT0ZfUkVUVVJOX01FU1NBR0UiLCJyYXRlT2ZSZXR1cm4iLCJMT1RUT19OVU1CRVJfU0VQRVJBVE9SIiwiYWN0aW9uIiwiZXJyb3JIYW5kbGVyIiwiZmluYWxBY3Rpb24iLCJlcnJvciIsImlucHV0TW9uZXlIYW5kbGVyIiwicHJldmVudERlZmF1bHQiLCJzYWZlRXZlbnRIYW5kbGVyV2l0aEFsZXJ0RXJyb3IiLCJpbnB1dE1vbmV5IiwiYm91Z2h0TG90dG9zbExlbmd0aCIsImJ1eWluZ0xvdHRvTW9uZXkiLCJib3VnaHRMb3R0b3MiLCJtb25leUlucHV0IiwicmVjZWl2ZUluamVjdGlvblZhbHVlIiwiZ2V0TW9uZXkiLCJtYWtlTG90dG9CeU1vbmV5IiwiZ2V0TG90dG9zIiwiZ2V0RWxlbWVudEJ5SWQiLCJ0ZXh0Q29udGVudCIsIlBST0dSRVNTX01FU1NBR0UiLCJsb3R0byIsImJvdWdodExvdHRvc0NvbnRhaW5lciIsImlubmVySFRNTCIsIkRFTElNSVRFUiIsInJlbmRlckJvdWdodExvdHRvcyIsImNsYXNzTGlzdCIsImFsZXJ0Iiwid2lubmluZ051bWJlcnMiLCJtb2RhbE9wZW5IYW5kbGVyIiwibW9kYWxDbG9zZUhhbmRsZXIiLCJhZGRFdmVudExpc3RlbmVyIiwibW9uZXlJbnB1dEZvcm0iLCJ3aW5uaW5nTG90dG9JbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwid2lubmluZ0xvdHRvRm9ybSIsIm1vZGFsQ2xvc2VCdXR0b24iLCJ3aW5uaW5nQ291bnRzIiwicmV0cnlTZWxlY3RCdXR0b24iLCJpbnB1dCIsIndpbm5pbmdOdW1iZXIiLCJmb2N1cyIsImZvY3VzTmV4dElucHV0Iiwic2V0V2luTG90dG9OdW1iZXJzIiwic2V0Qm9udXNOdW1iZXIiLCJibHVyIiwidG90YWxXaW5uaW5nTG90dG9OdW1iZXJzSGFuZGxlciIsImlucHV0V2lubmluZ0xvdHRvTnVtYmVyc0hhbmRsZXIiLCJnZXRXaW5Mb3R0b051bWJlcnMiLCJnZXRSZXdhcmRSZXN1bHQiLCJ3aW5uaW5nQ291bnQiLCJidXlpbmdNb25leSIsImdldFJhdGVPZkluY29tZSIsInN0YXRpc3RpY3NSZXN1bHRIYW5kbGVyIl0sInNvdXJjZVJvb3QiOiIifQ==